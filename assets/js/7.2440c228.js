(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{154:function(t,e,r){"use strict";r.r(e);var s=r(0),n=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),r("p",[t._v("每个页面都至少有一次回流，就是在页面第一次加载的时候。")]),r("p",[t._v("需要回流的情况：")]),t._m(3),t._m(4),t._m(5),r("p",[t._v("值得注意的是，回流一定引起重绘，而重绘不一定引起回流。")]),t._m(6),r("p",[t._v("我们知道，重绘和回流都给浏览器造成压力。如果我们用JS不断、频繁地操作DOM,浏览器必将不堪重压。所以很多浏览器都会有一个优化机制：")]),t._m(7),r("p",[t._v("虽然有了浏览器优化机制，但是，针对下面一些属性的更改，浏览器会提前flush队列，这样，优化就不起作用了：")]),t._m(8),r("p",[t._v("当你请求上面的一些属性的时候，浏览器为了给你最精确的值，需要flush队列，因为队列中可能会有影响到这些值的操作。即使你获取元素的布局和样式信息跟最近发生或改变的布局信息无关，浏览器都会强行刷新渲染队列。")]),r("p",[t._v("减少重绘和回流：")]),t._m(9),t._m(10),r("p",[t._v("参考："),r("br"),t._v("\n[1] "),r("a",{attrs:{href:"http://www.css88.com/archives/4996",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.css88.com/archives/4996"),r("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"重绘和回流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流","aria-hidden":"true"}},[this._v("#")]),this._v(" 重绘和回流")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"回流（reflow）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回流（reflow）","aria-hidden":"true"}},[this._v("#")]),this._v(" 回流（reflow）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当render tree中的一部分或全部因为元素的规模、尺寸等布局因素改变而需要重新构建，就成为"),e("strong",[this._v("回流")]),this._v("。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("1、添加或者删除可见的DOM元素；\n2、元素位置改变；\n3、元素尺寸改变——边距、填充、边框、宽度和高度\n4、内容改变——比如文本改变或者图片大小改变而引起的计算值宽度和高度改变；\n5、页面渲染初始化；\n6、浏览器窗口尺寸改变——resize事件发生时\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"重绘（repaint）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重绘（repaint）","aria-hidden":"true"}},[this._v("#")]),this._v(" 重绘（repaint）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("也许从repaint这个单词我们可以看出，重绘只是改变外观和风格，不影响布局（layout），比如"),e("code",[this._v("background-color")]),this._v(" 属性。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化","aria-hidden":"true"}},[this._v("#")]),this._v(" 性能优化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("浏览器会维护一个队列，将所有会引起重绘和回流的操作放入这个队列中，等队列中的"),e("strong",[this._v("操作到了一定的数量或者时间间隔")]),this._v("，浏览器就会flush队列，进行一个批处理，将本来的多次回流重绘变成一次回流重绘。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("1. offsetTop, offsetLeft, offsetWidth, offsetHeight\n2. scrollTop/Left/Width/Height\n3. clientTop/Left/Width/Height\n4. width,height\n5. 请求了getComputedStyle(), 或者 IE的 currentStyle\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[this._v("直接改变className，如果动态改变样式，则使用cssText（考虑没有优化的浏览器）")])]),e("li",[e("p",[this._v("让要操作的元素进行”离线处理”，处理完后一起更新")]),e("p",[this._v("使用DocumentFragment进行缓存操作,引发一次回流和重绘；\n使用display:none技术，只引发两次回流和重绘；\n使用cloneNode(true or false) 和 replaceChild 技术，引发一次回流和重绘；")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("3.不要经常访问会引起浏览器flush队列的属性，如果你确实要访问，利用缓存"),e("br"),this._v("\n4. 让元素脱离动画流，减少回流的Render Tree的规模")])}],!1,null,null,null);e.default=n.exports}}]);