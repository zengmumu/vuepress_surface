(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{54:function(e,r,t){"use strict";t.r(r);var a=t(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"flex布局教程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex布局教程","aria-hidden":"true"}},[e._v("#")]),e._v(" Flex布局教程")]),t("p",[e._v("本文来自"),t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("阮一峰老师的博客")])]),t("p",[e._v("布局的传统解决方案，是依赖"),t("code",[e._v("display+position+float")]),e._v(" 来实现，对于一些特殊的布局，十分不方便。2009年，W3C提出了一中新的方案——flex布局，它将成为未来布局的首选方案。")]),t("h2",{attrs:{id:"兼容性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#兼容性","aria-hidden":"true"}},[e._v("#")]),e._v(" 兼容性")]),t("p",[e._v("Chrome 21+ (更新到60)"),t("br"),e._v("\nOpera 12.1+ (目前更新到47)"),t("br"),e._v("\nFireFox 22+（目前更新到55）"),t("br"),e._v("\nSafari 6.1+ (目前更新到V10)"),t("br"),e._v("\nIE 10+ (目前更新到IE edge及11)")]),t("p",[e._v("时间：8/23/2017 4:58:36 PM")]),t("h2",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义","aria-hidden":"true"}},[e._v("#")]),e._v(" 定义")]),t("p",[e._v("flex布局意为“弹性布局”，用来为盒状模型提供最大的灵活性。")]),t("p",[e._v("不管是块级元素还是行内元素，都可以为元素指定flex布局属性值：")]),t("pre",[t("code",[e._v(".box{\n\tdisplay: flex;\n}\n")])]),t("p",[e._v("如果是Webkit内核的浏览器，必须加上"),t("code",[e._v("-Webkit")]),e._v("前缀。")]),t("pre",[t("code",[e._v(".box{  \n\tdisplay: -webkit-flex;  /* Safari */\n}  \n")])]),t("p",[e._v("值得注意的是，设置flex之后，子元素的float、clear、vertical属性都将失效。")]),t("h2",{attrs:{id:"容器的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性","aria-hidden":"true"}},[e._v("#")]),e._v(" 容器的属性")]),t("ul",[t("li",[e._v("flex-direction")]),t("li",[e._v("flex-wrap")]),t("li",[e._v("flex-flow")]),t("li",[e._v("justify-content")]),t("li",[e._v("align-items")]),t("li",[e._v("align-content")])]),t("h3",{attrs:{id:"_1-flex-direction属性决定元素的排列方向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex-direction属性决定元素的排列方向","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.flex-direction属性决定元素的排列方向")]),t("p",[e._v("它有四个值：")]),t("ul",[t("li",[e._v("row(默认)"),t("br"),e._v("\n水平方向排列，从左到右")]),t("li",[e._v("row-reverse"),t("br"),e._v("\n水平方向排列，从右到做")]),t("li",[e._v("colomn"),t("br"),e._v("\n垂直方向，从上往下")]),t("li",[e._v("colomn-reverse"),t("br"),e._v("\n垂直方向，从下往上")])]),t("h3",{attrs:{id:"_2-flex-wrap属性规定如果元素无法在一行中排下，如何换行。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-wrap属性规定如果元素无法在一行中排下，如何换行。","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.flex-wrap属性规定如果元素无法在一行中排下，如何换行。")]),t("p",[e._v("它有三个值：")]),t("ul",[t("li",[e._v("nowrap（默认）"),t("br"),e._v("\n不换行")]),t("li",[e._v("wrap"),t("br"),e._v("\n换行，第一行在上方")]),t("li",[e._v("wrapreverse"),t("br"),e._v("\n换行，第一行在下方")])]),t("h3",{attrs:{id:"_3-flex-flow属性是flex-direction属性和flex-wrap属性的简写方式。它的默认值是row-nowrap。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-flow属性是flex-direction属性和flex-wrap属性的简写方式。它的默认值是row-nowrap。","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.flex-flow属性是flex-direction属性和flex-wrap属性的简写方式。它的默认值是row nowrap。")]),t("pre",[t("code",[e._v(".box{   \n\tflex-flow: <flex-direction> <flex-wrap> ;\n}\n")])]),t("h3",{attrs:{id:"_4-justify-content属性规定了元素的对齐方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-justify-content属性规定了元素的对齐方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.justify-content属性规定了元素的对齐方式")]),t("p",[e._v("它有五个值：")]),t("ul",[t("li",[e._v("flex-start（默认值）"),t("br"),e._v("\n左对齐")]),t("li",[e._v("flex-end"),t("br"),e._v("\n右对齐")]),t("li",[e._v("center"),t("br"),e._v("\n居中")]),t("li",[e._v("space-between"),t("br"),e._v("\n两端对齐，元素之间的间隔都相等")]),t("li",[e._v("space-around"),t("br"),e._v("\n每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])]),t("h3",{attrs:{id:"_5-align-items属性规定了垂直方向上如何对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-align-items属性规定了垂直方向上如何对齐","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.align-items属性规定了垂直方向上如何对齐")]),t("p",[e._v("它有五个值：")]),t("ul",[t("li",[e._v("flex-start"),t("br"),e._v("\n紧贴顶部对齐")]),t("li",[e._v("flex-end"),t("br"),e._v("\n紧贴底部对齐")]),t("li",[e._v("center"),t("br"),e._v("\n交叉轴的终点对齐")]),t("li",[e._v("baseline"),t("br"),e._v("\n按照项目的第一行文字的基线对齐")]),t("li",[e._v("stretch(默认值)"),t("br"),e._v("\n如果项目未设置高度或设为auto，将占满整个容器的高度。")])]),t("h3",{attrs:{id:"_6-align-content属性规定了多行元素的对齐方式，如果只有一行，则不起作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-align-content属性规定了多行元素的对齐方式，如果只有一行，则不起作用","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.align-content属性规定了多行元素的对齐方式，如果只有一行，则不起作用")]),t("p",[e._v("它的值存在六个：")]),t("ul",[t("li",[e._v("flex-start"),t("br"),e._v("\n紧贴左边对齐")]),t("li",[e._v("flex-end"),t("br"),e._v("\n紧贴右边对齐")]),t("li",[e._v("center"),t("br"),e._v("\n居中对齐")]),t("li",[e._v("space-between"),t("br"),e._v("\n垂直两端对齐，水平的间隔平均分布。")]),t("li",[e._v("space-around"),t("br"),e._v("\n每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")]),t("li",[e._v("stretch(默认值)"),t("br"),e._v("\n轴线占满整个交叉轴。")])]),t("h2",{attrs:{id:"元素的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元素的属性","aria-hidden":"true"}},[e._v("#")]),e._v(" 元素的属性")]),t("p",[e._v("元素的属性有6个：")]),t("ul",[t("li",[e._v("order"),t("br"),e._v("\n规定了元素的排列顺序。数值越小，排列越靠前，默认为0。")]),t("li",[e._v("flex-grow"),t("br"),e._v("\n定义了元素的放大比例，默认为0；")]),t("li",[e._v("flex-shrink"),t("br"),e._v("\n定义了元素的缩小比例，默认值是1。")]),t("li",[e._v("flex-basis"),t("br"),e._v("\n定义了在分配多余空间之前，元素占据的空间，浏览器根据这个计算浏览器是否还有多余空间，它的默认值为auto,即项目的本来大小。")]),t("li",[e._v("flex"),t("br"),e._v("\nflex属性是"),t("code",[e._v("flex-grow")]),e._v("、"),t("code",[e._v("flex-shrink")]),e._v("和"),t("code",[e._v("flex-basis")]),e._v("的简写，默认值为0 1 auto。后两个属性可选。")]),t("li",[e._v("align-self"),t("br"),t("code",[e._v("align-self")]),e._v("属性允许单个元素有与其他元素不一样的对齐方式，可覆盖"),t("code",[e._v("align-items")]),e._v("属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于"),t("code",[e._v("stretch")]),e._v("。")])])])}],!1,null,null,null);r.default=i.exports}}]);