(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{56:function(e,t,a){"use strict";a.r(t);var i=a(0),r=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"第一部分：javascript部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一部分：javascript部分","aria-hidden":"true"}},[e._v("#")]),e._v(" 第一部分：JavaScript部分")]),a("h3",{attrs:{id:"_1-简述同步与异步的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简述同步与异步的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.简述同步与异步的区别")]),a("p",[e._v("同步是阻塞模式，异步是非阻塞模式。")]),a("p",[e._v("同步就是指一个进程在执行某个请求的时候，若该请求需要一段时间才能返回信息，那么这个进程将会一直等待下去，直到收到返回信息才继续执行下去;")]),a("p",[e._v("异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回时系统会通知进程进行处理，这样可以提高执行的效率。")]),a("h3",{attrs:{id:"_2-什么是跨域请求？怎样解决？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是跨域请求？怎样解决？","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.什么是跨域请求？怎样解决？")]),a("ul",[a("li",[a("p",[e._v("跨域，指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对JavaScript施加的安全限制。")]),a("p",[e._v("所谓同源是指，域名，协议，端口均相同，浏览器执行js脚本的时候，会检查这个脚本属于哪一个页面，如果不是同源页面，就不会执行。")])]),a("li",[a("p",[e._v("解决方法")]),a("ol",[a("li",[e._v("jsonp（jsonp 的原理是动态插入 script 标签）")]),a("li",[e._v("document.domain + iframe")]),a("li",[e._v("window.name、window.postMessage")]),a("li",[e._v("服务器上设置代理页面")])])])]),a("h3",{attrs:{id:"_3-怎样添加、删除、移动、复制、创建和查找节点？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-怎样添加、删除、移动、复制、创建和查找节点？","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.怎样添加、删除、移动、复制、创建和查找节点？")]),a("ul",[a("li",[e._v("创建新节点\n"),a("blockquote",[a("p",[e._v("createDocumentFragment()    //创建一个DOM片段"),a("br"),e._v("\ncreateElement()   //创建一个具体的元素"),a("br"),e._v("\ncreateTextNode()   //创建一个文本节点")])])]),a("li",[e._v("添加、移除、替换、插入\n"),a("blockquote",[a("p",[e._v("appendChild()"),a("br"),e._v("\nremoveChild()"),a("br"),e._v("\nreplaceChild()"),a("br"),e._v("\ninsertBefore() //并没有insertAfter()")])])]),a("li",[e._v("查找\n"),a("blockquote",[a("p",[e._v("getElementsByTagName()    //通过标签名称\ngetElementsByName()    //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)"),a("br"),e._v("\ngetElementById()    //通过元素Id，唯一性")])])])]),a("h3",{attrs:{id:"_4-事件是什么？如何阻止事件冒泡？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-事件是什么？如何阻止事件冒泡？","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.事件是什么？如何阻止事件冒泡？")]),a("ul",[a("li",[a("p",[e._v("事件：用于监听浏览器的操作行为，浏览器触发动作时被捕捉到而调用相应的函数。事件执行三个阶段")]),a("ol",[a("li",[e._v("事件捕获阶段")]),a("li",[e._v("处于目标阶段")]),a("li",[e._v("事件冒泡阶段"),a("br"),e._v("\n捕获型事件是自上而下，而冒泡型事件是自下而上的，而我们程序员通常要做的就是第二阶段，完成事件的动作。而第一、三阶段由系统封装自动调用完成。")])])]),a("li",[a("p",[e._v("阻止冒泡")]),a("blockquote",[a("p",[e._v("event.stopPropagation()"),a("br"),e._v("\nIE浏览器\nevent.cancelBubble = true;")])])])]),a("h3",{attrs:{id:"_5-手写ajax。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-手写ajax。","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.手写Ajax。")]),a("pre",[a("code",[e._v('var xhr = new XMLHttpRequest();\nxhr.open("GET","api",false);\nxhr.onreadystatechange = function(){\n\tif(xhr.readyState == 4){\n\t\tif(xhr.status == 200){\n\t\t\talert(xhr.responseText);\n\t\t}\n\t}\n}\nxhr..send(null);\n')])]),a("h3",{attrs:{id:"_6-什么是闭包，为什么要用它？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-什么是闭包，为什么要用它？","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.什么是闭包，为什么要用它？")]),a("ul",[a("li",[e._v("我个人理解，闭包是就是函数中的函数，里面的函数可以访问外面函数的变量，外面的变量的是这个内部函数的一部分。")]),a("li",[e._v("闭包的作用"),a("br"),e._v("\n1.使用闭包可以访问函数中的变量。"),a("br"),e._v("\n2.可以使变量长期保存在内存中，生命周期比较长。")]),a("li",[e._v("闭包不能滥用，否则会导致内存泄露，影响网页的性能。闭包使用完了后，要立即释放资源，将引用变量指向null。")])]),a("h3",{attrs:{id:"_7-创建对象有哪些方式？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-创建对象有哪些方式？","aria-hidden":"true"}},[e._v("#")]),e._v(" 7.创建对象有哪些方式？")]),a("ol",[a("li",[e._v("工厂模式")]),a("li",[e._v("构造函数模式")]),a("li",[e._v("原型模式")]),a("li",[e._v("混合构造函数和原型模式")]),a("li",[e._v("动态原型模式")]),a("li",[e._v("寄生构造函数模式")]),a("li",[e._v("稳妥构造函数模式")])]),a("h3",{attrs:{id:"_8-json-格式是什么？你了解吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-json-格式是什么？你了解吗？","aria-hidden":"true"}},[e._v("#")]),e._v(" 8.JSON 格式是什么？你了解吗？")]),a("p",[e._v('JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小{"age":"12", "name":"back"}')]),a("h3",{attrs:{id:"_9-原型是什么？原型链是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-原型是什么？原型链是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 9.原型是什么？原型链是什么？")]),a("ol",[a("li",[e._v("原型对象也是普通的对象，是对象一个自带隐式的 "),a("strong",[e._v("proto")]),e._v(" 属性，原型也有可能有自己的原型，如果一个原型对象的原型不为 null 的话，我们就称之为原型链")]),a("li",[e._v("原型链是由一些用来继承和共享属性的对象组成的（有限的）对象链")])]),a("h3",{attrs:{id:"_10-谈谈你对this的理解？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-谈谈你对this的理解？","aria-hidden":"true"}},[e._v("#")]),e._v(" 10.谈谈你对this的理解？")]),a("p",[e._v("this是js的一个关键字，随着函数使用场合不同，this的值会发生变化。\n但是有一个总原则，那就是this指的是调用函数的那个对象。\nthis一般情况下：是全局对象Global。 作为方法调用，那么this就是指这个对象")]),a("h3",{attrs:{id:"_11-call-和-apply-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-call-和-apply-的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 11.call() 和 apply() 的区别？")]),a("ul",[a("li",[e._v("相同点：两个方法产生的作用是完全一样的，动态改变某个类的某个方法的运行环境。")]),a("li",[e._v("不同点：调用的参数不同，比较精辟的总结：")])]),a("blockquote",[a("p",[e._v("foo.call(this,arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)")])]),a("p",[e._v("参考：http://blog.csdn.net/myhahaxiao/article/details/6952321")]),a("h3",{attrs:{id:"_12-eval是做什么的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-eval是做什么的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 12.eval是做什么的？")]),a("p",[e._v("它的功能是把对应的字符串解析成JS代码并运行。")]),a("h3",{attrs:{id:"_13-js延迟加载的方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-js延迟加载的方式有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 13.js延迟加载的方式有哪些？")]),a("p",[e._v("defer和async、动态创建DOM方式（用得最多）、按需异步载入js")]),a("h3",{attrs:{id:"_14-new操作符具体干了什么呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-new操作符具体干了什么呢","aria-hidden":"true"}},[e._v("#")]),e._v(" 14.new操作符具体干了什么呢?")]),a("ol",[a("li",[a("p",[e._v("创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。")])]),a("li",[a("p",[e._v("属性和方法被加入到 this 引用的对象中。")])]),a("li",[a("p",[e._v("新创建的对象由 this 所引用，并且最后隐式的返回 this。")]),a("p",[e._v("var obj  = {};"),a("br"),e._v("\nobj."),a("strong",[e._v("proto")]),e._v(" = Base.prototype;"),a("br"),e._v("\nBase.call(obj);")])])]),a("h3",{attrs:{id:"_15-请描述一下-cookies，sessionstorage-和-localstorage-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-请描述一下-cookies，sessionstorage-和-localstorage-的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 15.请描述一下 cookies，sessionStorage 和 localStorage 的区别？")]),a("p",[e._v("在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localStorage来取代globalStorage。")]),a("p",[e._v("html5中的Web Storage包括了两种存储方式：sessionStorage和localStorage。")]),a("p",[e._v("sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。")]),a("p",[e._v("而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。")]),a("p",[e._v("Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。")]),a("p",[e._v("除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。")]),a("p",[e._v("但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生")]),a("p",[e._v("浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。通过简单的代码封装可以统一到所有的浏览器都支持web storage。")]),a("p",[e._v("localStorage和sessionStorage都具有相同的操作方法，例如setItem、getItem和removeItem等")]),a("h3",{attrs:{id:"_16-说说cookie的弊端和优点？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-说说cookie的弊端和优点？","aria-hidden":"true"}},[e._v("#")]),e._v(" 16.说说cookie的弊端和优点？")]),a("p",[e._v("cookie虽然在持久保存客户端数据提供了方便，分担了服务器存储的负担，但还是有很多局限性的。\n第一：每个特定的域名下最多生成20个cookie")]),a("p",[e._v("1.IE6或更低版本最多20个cookie\n2.IE7和之后的版本最后可以有50个cookie。\n3.Firefox最多50个cookie\n4.chrome和Safari没有做硬性限制\nIE和Opera 会清理近期最少使用的cookie，Firefox会随机清理cookie。")]),a("p",[e._v("cookie的最大大约为4096字节，为了兼容性，一般不能超过4095字节。")]),a("p",[e._v("IE 提供了一种存储可以持久化用户数据，叫做uerData，从IE5.0就开始支持。每个数据最多128K，每个域名下最多1M。这个持久化数据放在缓存中，如果缓存没有清理，那么会一直存在。")]),a("p",[e._v("优点：极高的扩展性和可用性")]),a("p",[e._v("1.通过良好的编程，控制保存在cookie中的session对象的大小。\n2.通过加密和安全传输技术（SSL），减少cookie被破解的可能性。\n3.只在cookie中存放不敏感数据，即使被盗也不会有重大损失。\n4.控制cookie的生命期，使之不会永远有效。偷盗者很可能拿到一个过期的cookie。")]),a("p",[e._v("缺点：\n1."),a("code",[e._v("Cookie")]),e._v("数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。")]),a("p",[e._v("2.安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。")]),a("p",[e._v("3.有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。")]),a("h3",{attrs:{id:"_17-js对象的深度克隆代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-js对象的深度克隆代码实现","aria-hidden":"true"}},[e._v("#")]),e._v(" 17.js对象的深度克隆代码实现")]),a("pre",[a("code",[e._v("\tfunction clone(Obj) {\n\t    var buf;   \n\t    if (Obj instanceof Array) {\n\t        buf = [];  // 创建一个空的数组\n\t        var i = Obj.length;\n\t        while (i--) {\n\t            buf[i] = clone(Obj[i]);\n\t        }\n\t        return buf;\n\t    } else if (Obj instanceof Object){\n\t        buf = {};  // 创建一个空对象\n\t        for (var k in Obj) {  // 为这个对象添加新的属性\n\t            buf[k] = clone(Obj[k]);\n\t        }\n\t        return buf;\n\t    }else{\n\t        return Obj;\n\t    }\n\t}\n")])]),a("h3",{attrs:{id:"_18-请你解释一下js的同源策略，为什么要有同源策略？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-请你解释一下js的同源策略，为什么要有同源策略？","aria-hidden":"true"}},[e._v("#")]),e._v(" 18.请你解释一下JS的同源策略，为什么要有同源策略？")]),a("p",[e._v("概念:同源策略是客户端脚本（尤其是Javascript）的重要的安全度量标准。它最早出自Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。"),a("br"),e._v("\n这里的同源策略指的是：协议，域名，端口相同，同源策略是一种安全协议。指一段脚本只能读取来自同一来源的窗口和文档的属性。")]),a("p",[e._v("我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。")]),a("h3",{attrs:{id:"_19-常见web安全及防护原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-常见web安全及防护原理","aria-hidden":"true"}},[e._v("#")]),e._v(" 19.常见WEB安全及防护原理")]),a("ul",[a("li",[a("p",[e._v("SQL注入")]),a("ul",[a("li",[a("p",[e._v("原理：就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。")])]),a("li",[a("p",[e._v("防护：总的来说有如下。")]),a("blockquote",[a("p",[e._v('1.永远不要信任用户的输入，要对用户的输入进行校验，可以通过正则表达式，或限制长度，对单引号和双"-"进行转换等。'),a("br"),e._v("\n2.永远不要使用动态拼装SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取。"),a("br"),e._v("\n3.永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。"),a("br"),e._v("\n4.不要把机密信息明文存放，请加密或者hash掉密码和敏感的信息。")])])])])]),a("li",[a("p",[e._v("XSS攻击")]),a("ul",[a("li",[e._v("原理：Xss(cross-site scripting)攻击指的是攻击者往Web页面里插入恶意 html标签或者javascript代码。比如：攻击者在论坛中放一个看似安全的链接，骗取用户点击后，窃取cookie中的用户私密信息；或者攻击者在论坛中加一个恶意表单，当用户提交表单的时候，却把信息传送到攻击者的服务器中，而不是用户原本以为的信任站点。")]),a("li",[e._v("防范：")])]),a("blockquote",[a("p",[e._v("1.首先代码里对用户输入的地方和变量都需要仔细检查长度和对”<”,”>”,”;”,”’”等字符做过滤；\n2.其次任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。这一个层面做好，至少可以堵住超过一半的XSS 攻击。"),a("br"),e._v("\n3.首先，避免直接在cookie 中泄露用户隐私，例如email、密码等等。\n其次，通过使cookie 和系统ip 绑定来降低cookie 泄露后的危险。这样攻击者得到的cookie 没有实际价值，不可能拿来重放。"),a("br"),e._v("\n4.如果网站不需要再浏览器端对cookie 进行操作，可以在Set-Cookie 末尾加上HttpOnly 来防止javascript 代码直接获取cookie。"),a("br"),e._v("\n5.尽量采用POST 而非GET 提交表单")])])]),a("li",[a("p",[e._v("CSRF的防御")]),a("ul",[a("li",[e._v("服务端的CSRF方式方法很多样，但总的思想都是一致的，就是在客户端页面增加伪随机数。")]),a("li",[e._v("通过验证码的方法")])])])]),a("h3",{attrs:{id:"_20-什么是-“use-strict”-使用它的好处和坏处是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-什么是-“use-strict”-使用它的好处和坏处是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 20.什么是 “use strict”? 使用它的好处和坏处是什么？")]),a("p",[e._v('ECMAscript 5添加了第二种运行模式："严格模式"（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。')]),a("p",[e._v('设立"严格模式"的目的，主要有以下几个：')]),a("ol",[a("li",[e._v("消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;")]),a("li",[e._v("消除代码运行的一些不安全之处，保证代码运行的安全；")]),a("li",[e._v("提高编译器效率，增加运行速度；")]),a("li",[e._v("为未来新版本的Javascript做好铺垫。")])]),a("p",[e._v("注：经过测试 IE6,7,8,9 均不支持严格模式。")]),a("p",[e._v("缺点："),a("br"),e._v("\n现在网站的 JS 都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge 后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节。")]),a("h3",{attrs:{id:"_21-如何实现浏览器内多个标签页之间的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-如何实现浏览器内多个标签页之间的通信","aria-hidden":"true"}},[e._v("#")]),e._v(" 21.如何实现浏览器内多个标签页之间的通信?")]),a("p",[e._v("WebSocket、 SharedWorker；"),a("br"),e._v("\n也可以调用localstorage、 cookies 等本地存储方式；"),a("br"),e._v("\nlocalstorage另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，")]),a("p",[e._v("我们通过监听事件，控制它的值来进行页面信息通信；")]),a("p",[e._v("注意quirks： Safari 在无痕模式下设置 localstorge 值时会抛出 QuotaExceededError 的异常；")]),a("h3",{attrs:{id:"_22-事件、ie与火狐的事件机制有什么区别？-如何阻止冒泡？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-事件、ie与火狐的事件机制有什么区别？-如何阻止冒泡？","aria-hidden":"true"}},[e._v("#")]),e._v(" 22.事件、IE与火狐的事件机制有什么区别？ 如何阻止冒泡？")]),a("ol",[a("li",[e._v("我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为")]),a("li",[e._v("事件处理机制：IE是事件冒泡、firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件")]),a("li",[e._v("ev.stopPropagation();\n注意旧ie的方法：ev.cancelBubble = true;")])]),a("h3",{attrs:{id:"_23-那些操作会造成内存泄漏？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-那些操作会造成内存泄漏？","aria-hidden":"true"}},[e._v("#")]),e._v(" 23.那些操作会造成内存泄漏？")]),a("p",[e._v("内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。\n垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。")]),a("ol",[a("li",[e._v("setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。")]),a("li",[e._v("闭包")]),a("li",[e._v("控制台日志")]),a("li",[e._v("循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）")])]),a("h3",{attrs:{id:"_24-标准模式和兼容模式各有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-标准模式和兼容模式各有什么区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 24.标准模式和兼容模式各有什么区别？")]),a("p",[e._v("标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。")]),a("h3",{attrs:{id:"_25-哪些地方会出现css阻塞，哪些地方会出现js阻塞？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-哪些地方会出现css阻塞，哪些地方会出现js阻塞？","aria-hidden":"true"}},[e._v("#")]),e._v(" 25.哪些地方会出现css阻塞，哪些地方会出现js阻塞？")]),a("p",[e._v("js 的阻塞特性：所有浏览器在下载 JS 的时候，会阻止一切其他活动，比如其他资源的下载，内容的呈现等等。直到 JS 下载、解析、执行完毕后才开始继续并行下载其他资源并呈现内容。为了提高用户体验，新一代浏览器都支持并行下载 JS，但是 JS 下载仍然会阻塞其它资源的下载（例如.图片，css文件等）。"),a("br"),e._v("\n由于浏览器为了防止出现 JS 修改 DOM 树，需要重新构建 DOM 树的情况，所以就会阻塞其他的下载和呈现。"),a("br"),e._v("\n嵌入 JS 会阻塞所有内容的呈现，而外部 JS 只会阻塞其后内容的显示，2 种方式都会阻塞其后资源的下载。也就是说外部样式不会阻塞外部脚本的加载，但会阻塞外部脚本的执行。")]),a("p",[e._v("CSS 怎么会阻塞加载了？CSS 本来是可以并行下载的，在什么情况下会出现阻塞加载了(在测试观察中，IE6 下 CSS 都是阻塞加载）"),a("br"),e._v("\n当 CSS 后面跟着嵌入的 JS 的时候，该 CSS 就会出现阻塞后面资源下载的情况。而当把嵌入 JS 放到 CSS 前面，就不会出现阻塞的情况了。"),a("br"),e._v("\n根本原因：因为浏览器会维持 html 中 css 和 js 的顺序，样式表必须在嵌入的 JS 执行前先加载、解析完。而嵌入的 JS 会阻塞后面的资源加载，所以就会出现上面 CSS 阻塞下载的情况。")]),a("p",[e._v("嵌入JS应该放在什么位置？")]),a("ol",[a("li",[e._v("放在底部，虽然放在底部照样会阻塞所有呈现，但不会阻塞资源下载。")]),a("li",[e._v("如果嵌入JS放在head中，请把嵌入JS放在CSS头部。")]),a("li",[e._v("使用 defer（只支持IE）")]),a("li",[e._v("不要在嵌入的JS中调用运行时间较长的函数，如果一定要用，可以用 setTimeout 来调用")])]),a("p",[e._v("Javascript无阻塞加载具体方式：")]),a("ol",[a("li",[a("p",[e._v("将脚本放在底部。"),a("code",[e._v("<link>")]),e._v("还是放在"),a("code",[e._v("<head>")]),e._v("中，用以保证在js加载前，能加载出正常显示的页面。"),a("code",[e._v("<script>")]),e._v("放在"),a("code",[e._v("</body>")]),e._v("结束前。")])]),a("li",[a("p",[e._v("阻塞脚本：由于每个script标签下载时阻塞页面解析过程，所以限制页面的script总数也可以改善性能。适用于内联脚本和外部脚本。")])]),a("li",[a("p",[e._v("非阻塞脚本：等页面完成加载后，再加载js代码。也就是，在 window.onload 事件发出后开始下载代码。")])]),a("li",[a("p",[e._v("defer属性：支持IE4和fierfox3.5更高版本浏览器")])]),a("li",[a("p",[e._v("动态脚本元素：文档对象模型（DOM）允许你使用js动态创建HTML的几乎全部文档内容。代码如下：")]),a("p",[a("code",[e._v('<script> var script=document.createElement("script"); script.type="text/javascript"; script.src="file.js"; document.getElementsByTagName("head")[0].appendChild(script); <\/script>')])])])]),a("p",[e._v("此技术的重点在于：无论在何处启动下载，文件额下载和运行都不会阻塞其他页面处理过程，即使在head里（除了用于下载文件的 http 链接）")]),a("h3",{attrs:{id:"_26-ajax的readystate有5个状态-，每个状态表示什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-ajax的readystate有5个状态-，每个状态表示什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 26.ajax的readystate有5个状态 ，每个状态表示什么？")]),a("ul",[a("li",[e._v("0:未初始化。尚未调用open()方法。")]),a("li",[e._v("1:启动。已经调用open方法，但尚未调用send()方法。")]),a("li",[e._v("2:发送。已经调用send()方法，但尚未接收到响应。")]),a("li",[e._v("3:接收。已经接收到部分响应数据。")]),a("li",[e._v("4:完成。已经接收到全部响应数据，而且可以在客户端使用了。")])]),a("h3",{attrs:{id:"_34-简述在ie下mouseover和mouseenter的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-简述在ie下mouseover和mouseenter的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 34.简述在IE下mouseover和mouseenter的区别？")]),a("p",[e._v("当鼠标穿过被选元素或子元素，都会出发mouseover，只有穿过被选元素，才会触发mouseenter。 在IE中，mouseenter子元素不会反复触发事件。")]),a("h3",{attrs:{id:"_27-js-操作获取和设置-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-js-操作获取和设置-cookie","aria-hidden":"true"}},[e._v("#")]),e._v(" 27.js 操作获取和设置 cookie")]),a("pre",[a("code",[e._v("\tfunction setCookie(name, value, expires, path, domain, secure) {\n\t    var cookieText = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n\t    if (expires instanceof Date) {\n\t        cookieText += '; expires=' + expires;\n\t    }\n\t    if (path) {\n\t        cookieText += \"; path=\" + path     }\n\t    if (domain) {\n\t        cookieText += '; domain=' + domain;\n\t    }\n\t    if (secure) {\n\t        cookieText += '; secure';\n\t    }\n\t    document.cookie = cookieText;\n\t}\n\t// 获取cookie\n\tfunction getCookie(name) {\n\t    var cookieName = encodeURIComponent(name) + '=';\n\t    var cookieStart = document.cookie.indexOf(cookieName);\n\t    var cookieValue = null;\n\t    if (cookieStart > -1) {\n\t        var cookieEnd = document.cookie.indexOf(';', cookieStart);\n\t        if (cookieEnd == -1) {\n\t            cookieEnd = document.cookie.length;\n\t        }\n\t        cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd));\n\t    }\n\t    return cookieValue;\n\t}\n\t// 删除cookie\n\tfunction unsetCookie(name) {\n\t    document.cookie = name + \"= ; expires=\" + new Date(0);\n\t}\n")])]),a("h3",{attrs:{id:"_28-浏览器的内核分别是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-浏览器的内核分别是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 28.浏览器的内核分别是什么？")]),a("p",[e._v("IE浏览器的内核Trident、Mozilla的Gecko、Chrome的Blink（WebKit的分支）、Opera内核原为Presto，现为Blink；")]),a("h3",{attrs:{id:"_29-如何解决跨域问题？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-如何解决跨域问题？","aria-hidden":"true"}},[e._v("#")]),e._v(" 29.如何解决跨域问题？")]),a("ul",[a("li",[e._v("CORS，跨域资源共享，定义了必须在访问跨域资源时，浏览览器与服务器该如何沟通，基本思想是，使用自定义的HTTP头部让浏览器与服务器进行沟通，从而决定请求或响应是否成功。注意，请求和响应都不包含cookie信息。IE8通过XDomainRequest对象支持CORS，其它浏览器通过XHR对象原生支持CORS。")]),a("li",[e._v("图像Ping，多用于动态创建图像。该方式与服务器进行简单、单向的跨域通信。 它有两个主要缺点，一是只能发送GET请求，二是无法访问服务器的响应文本。")]),a("li",[e._v("JSONP，填充式JSON，应用JSON的一种新方法。它是被包含在函数调用中的JSON，例如，callback({“name”:“abc”})； JSONP由两部分组成，毁掉函数和数据。毁掉函数是当响应到来时应该在页面中调用的函数。数据时传入毁掉函数中的JSON数据。")]),a("li",[e._v("Comet，是一种服务器向页面推送数据的技术。两种方式可实现，长轮询和流。")]),a("li",[e._v("SSE，服务器发送事件。SSE API用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。")]),a("li",[e._v("Web Sockets API")])]),a("h3",{attrs:{id:"_30-js延迟加载的方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-js延迟加载的方式有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 30.js延迟加载的方式有哪些？")]),a("ol",[a("li",[e._v("defer和async")]),a("li",[e._v("动态创建DOM方式（创建script，插入到DOM中，加载完毕后callBack）")]),a("li",[e._v("按需异步载入js")])]),a("h3",{attrs:{id:"_31-如何判断当前脚本运行在浏览器还是node环境中？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-如何判断当前脚本运行在浏览器还是node环境中？","aria-hidden":"true"}},[e._v("#")]),e._v(" 31.如何判断当前脚本运行在浏览器还是node环境中？")]),a("p",[e._v("通过判断 Global 对象是否为window，如果不为window，当前脚本没有运行在浏览器中。即在node中的全局变量是global ,浏览器的全局变量是window。 可以通过该全局变量是否定义来判断宿主环境")]),a("h3",{attrs:{id:"_32-说几条javascript的基本规范？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-说几条javascript的基本规范？","aria-hidden":"true"}},[e._v("#")]),e._v(" 32.说几条JavaScript的基本规范？")]),a("p",[e._v("1.不要在同一行声明多个变量。"),a("br"),e._v("\n2.请使用 ===/!==来比较true/false或者数值"),a("br"),e._v("\n3.使用对象字面量替代new Array这种形式"),a("br"),e._v("\n4.不要使用全局函数。"),a("br"),e._v("\n5.Switch语句必须带有default分支"),a("br"),e._v("\n6.函数不应该有时候有返回值，有时候没有返回值。"),a("br"),e._v("\n7.For循环必须使用大括号"),a("br"),e._v("\n8.If语句必须使用大括号"),a("br"),e._v("\n9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。")]),a("h3",{attrs:{id:"_33-flash、ajax各自的优缺点，在使用中如何取舍？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-flash、ajax各自的优缺点，在使用中如何取舍？","aria-hidden":"true"}},[e._v("#")]),e._v(" 33.Flash、Ajax各自的优缺点，在使用中如何取舍？")]),a("p",[e._v("Flash：")]),a("ol",[a("li",[e._v("Flash适合处理多媒体、矢量图形、访问机器")]),a("li",[e._v("对CSS、处理文本上不足，不容易被搜索")])]),a("p",[e._v("Ajax：")]),a("ol",[a("li",[e._v("Ajax对CSS、文本支持很好，支持搜索")]),a("li",[e._v("多媒体、矢量图形、机器访问不足")])]),a("p",[e._v("共同点：")]),a("ol",[a("li",[e._v("与服务器的无刷新传递消息")]),a("li",[e._v("可以检测用户离线和在线状态")]),a("li",[e._v("操作DOM")])]),a("h3",{attrs:{id:"_34-编程实现函数柯里化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-编程实现函数柯里化","aria-hidden":"true"}},[e._v("#")]),e._v(" 34.编程实现函数柯里化")]),a("blockquote",[a("p",[e._v("函数式编程curry的概念： 只传递给函数一部分参数来调用函数，然后返回一个函数去处理剩下的参数。"),a("br"),e._v("\n简单的例子如：")])]),a("pre",[a("code",[e._v("\tfunction add(num1,num2){\n\t\treturn num1+num2;\n\t}\n\t\n\tfunction curriedAdd(num2){\n\t\treturn add(5,num2);\n\t}\n\t\n\talert(add(2,3));   //5\n\talert(curriedAdd(3));   //8\n")])]),a("h3",{attrs:{id:"_35-web应用从服务器主动推送data到客户端有哪些方式？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-web应用从服务器主动推送data到客户端有哪些方式？","aria-hidden":"true"}},[e._v("#")]),e._v(" 35.web应用从服务器主动推送Data到客户端有哪些方式？")]),a("ul",[a("li",[e._v("html5提供的Websocket")]),a("li",[e._v("不可见的iframe")]),a("li",[e._v("WebSocket通过Flash")]),a("li",[e._v("XHR长时间连接")]),a("li",[e._v("XHR Multipart Streaming")]),a("li",[e._v("script标签的长时间连接(可跨域)")])]),a("h3",{attrs:{id:"_36-是否设计过通用的组件？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-是否设计过通用的组件？","aria-hidden":"true"}},[e._v("#")]),e._v(" 36.是否设计过通用的组件？")]),a("p",[e._v("请设计一个 Dialog（弹出层） / Suggestion（自动完成） / Slider（图片轮播） 等组件,你会提供什么接口？调用过程是怎样的？可能会遇到什么细节问题？")]),a("h3",{attrs:{id:"_48-用javascript脚本为array对象添加一个去除重复项的方法。（数组去重）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_48-用javascript脚本为array对象添加一个去除重复项的方法。（数组去重）","aria-hidden":"true"}},[e._v("#")]),e._v(" 48.用JavaScript脚本为Array对象添加一个去除重复项的方法。（数组去重）")]),a("pre",[a("code",[e._v("return Arrays.from(new Set(arr));\n")])]),a("h3",{attrs:{id:"_37-null和undefined的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37-null和undefined的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 37.null和undefined的区别？")]),a("p",[e._v('null是一个表示"无"的对象，转为数值时为0'),a("br"),e._v('\nundefined是一个表示"无"的原始值，转为数值时为NaN')]),a("p",[e._v("当声明的变量还未被初始化时，变量的默认值为undefined"),a("br"),e._v("\nnull用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象")]),a("p",[e._v("undefined表示 “缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：")]),a("ol",[a("li",[e._v("变量被声明了，但没有赋值时，就等于 undefined")]),a("li",[e._v("调用函数时，应该提供的参数没有提供，该参数等于 undefined")]),a("li",[e._v("对象没有赋值的属性，该属性的值为 undefined")]),a("li",[e._v("函数没有返回值时，默认返回 undefined")])]),a("p",[e._v("null表示“没有对象”，即该处不应该有值。典型用法是：")]),a("ol",[a("li",[e._v("作为函数的参数，表示该函数的参数不是对象")]),a("li",[e._v("作为对象原型链的终点")])]),a("h3",{attrs:{id:"_50-js实现继承的几种方式？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_50-js实现继承的几种方式？","aria-hidden":"true"}},[e._v("#")]),e._v(" 50.js实现继承的几种方式？")]),a("ol",[a("li",[e._v("原型链继承")]),a("li",[e._v("借用构造函数继承")]),a("li",[e._v("组合继承(原型+借用构造)")]),a("li",[e._v("原型式继承")]),a("li",[e._v("寄生式继承")]),a("li",[e._v("寄生组合式继承")])]),a("h3",{attrs:{id:"_38-websocket-如何兼容低浏览器？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38-websocket-如何兼容低浏览器？","aria-hidden":"true"}},[e._v("#")]),e._v(" 38.webSocket 如何兼容低浏览器？")]),a("pre",[a("code",[e._v("\tAdobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR \n")])]),a("h3",{attrs:{id:"_39-js和ecmascript的区别和联系？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39-js和ecmascript的区别和联系？","aria-hidden":"true"}},[e._v("#")]),e._v(" 39.JS和ECMAScript的区别和联系？")]),a("p",[e._v("ECMAScript是JavaScript的规范，JavaScript是ECMAScript的实现。")]),a("p",[e._v("js是一种专为与网页交互而设计的脚本语言，由下列三个不同部分组成："),a("br"),e._v("\n核心ECMAScript，提供核心语言功能；"),a("br"),e._v("\n文档对象模型（DOM），提供访问和操作网页内容的方法和接口；"),a("br"),e._v("\n浏览器对象模型（BOM），提供与浏览器交互的方法和接口。")]),a("h2",{attrs:{id:"第二部分：html-css部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二部分：html-css部分","aria-hidden":"true"}},[e._v("#")]),e._v(" 第二部分：HTML / CSS部分")]),a("h3",{attrs:{id:"_1-什么是盒子模型？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是盒子模型？","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.什么是盒子模型？")]),a("pre",[a("code",[e._v("（1）有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 pading;\n\n（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border).\n")])]),a("p",[e._v("在网页中，一个元素占有空间的大小由几个部分构成，其中包括元素的内容(content)，元素的内边距(padding)，元素的边框(border)，元素的外边距(margin)四个部分。这四个部分占有的空间中，有的部分可以显示相应的内容，而有的部分只用来分隔相邻的区域或区域。4个部分一起构成了css中元素的盒模型。")]),a("h3",{attrs:{id:"_2-简述一下src和href的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-简述一下src和href的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.简述一下src和href的区别")]),a("p",[e._v("href:指向外部资源所在位置，建立和当前元素(锚点)或当前文档(链接)之间的链接，用于超链接。")]),a("p",[e._v("src:是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置;在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。")]),a("h3",{attrs:{id:"_3-css中如何设置英文首字母大写？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-css中如何设置英文首字母大写？","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.css中如何设置英文首字母大写？")]),a("p",[e._v("在相应的元素中设置text-transform的属性值为text-transform:capitalize。")]),a("h3",{attrs:{id:"_4-是否应该支持ie6？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-是否应该支持ie6？","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.是否应该支持ie6？")]),a("p",[e._v("2014年4月，微软就停止了对XP系统和IE6浏览器的支持，已经很多年了，用XP和IE6的用户已经很少很少了。我觉得作为一个前端开发者，不必要一味迁就这些用户，应当适当推动他们改变，这对技术的发展也是有好处的。")]),a("h3",{attrs:{id:"_5-px、em、rem的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-px、em、rem的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.px、em、rem的区别")]),a("ul",[a("li",[e._v("px是相对于显示器的像素而言的；em是相对于当前对象内的字体尺寸而言，如果行内字体大小没有被设置，则是默认相对于浏览器字体尺寸；而rem是相对于根元素字体的大小而言。")]),a("li",[e._v("1em = 16px，1rem = 16px。为什么是这样，因为所有未经调整的浏览器字体大小都是16px；")]),a("li",[e._v("IE9及以上的版本兼容rem。")])]),a("h3",{attrs:{id:"_6-写出几种解决ie6bug的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-写出几种解决ie6bug的方法","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.写出几种解决IE6Bug的方法")]),a("p",[e._v("1.双边距BUG float引起的 使用dislpay:inline;"),a("br"),e._v("\n2.像素问题 使用float引起的 使用margin-left: -3px;"),a("br"),e._v("\n3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active"),a("br"),e._v("\n4.Ie z-index问题 给父级添加position:relative"),a("br"),e._v("\n5.Png 透明 使用js代码改"),a("br"),e._v("\n6.Min-height 最小高度 !Important 解决"),a("br"),e._v("\n7.select 在ie6下遮盖 使用iframe嵌套"),a("br"),e._v("\n8.为什么没有办法定义1px左右的宽度容器(IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px)")]),a("h3",{attrs:{id:"_7-css的引入方式有哪些-link和-import的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-css的引入方式有哪些-link和-import的区别是什么","aria-hidden":"true"}},[e._v("#")]),e._v(" 7.css的引入方式有哪些?link和@import的区别是什么?")]),a("ul",[a("li",[e._v("引入方式有：内嵌 、内联 、嵌入")]),a("li",[e._v("link属于html标签，而@import是css提供的。")]),a("li",[e._v("页面被加载时，link会同时被加载，而@import引用的css会等到页面加载结束后加载。")]),a("li",[e._v("link是html标签，因此没有兼容性，而@import只有IE5以上才能识别。")]),a("li",[e._v("link方式样式的权重高于@import的")])]),a("h3",{attrs:{id:"_8-对web标准以及w3c的理解和认识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-对web标准以及w3c的理解和认识","aria-hidden":"true"}},[e._v("#")]),e._v(" 8.对WEB标准以及W3C的理解和认识")]),a("p",[e._v("WEB标准不是某一个标准，而是一系列标准的集合。目前所通常所说的WEB标准一般指网站建设采用基于XHTML语言的网站设计语言,WEB标准中典型的应用模式是“css+div”(什么是css+div)。实际上，WEB标准并不是某一个标准，而是一系列标准的集合。")]),a("h3",{attrs:{id:"_9-页面渲染的原理是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-页面渲染的原理是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 9.页面渲染的原理是什么？")]),a("ol",[a("li",[e._v("渲染引擎开始解析html，根据标签构建DOM节点")]),a("li",[e._v("根据css样式构建渲染树，包括元素的大小、颜色，隐藏的元素不会被构建到该树中。")]),a("li",[e._v("根据css样式构建布局树，主要是确定元素要显示的位置。")]),a("li",[e._v("根据前面的信息，绘制渲染树。")])]),a("h3",{attrs:{id:"_10-页面优化有哪些方法？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-页面优化有哪些方法？","aria-hidden":"true"}},[e._v("#")]),e._v(" 10.页面优化有哪些方法？")]),a("p",[e._v("可遵循雅虎军规。")]),a("ul",[a("li",[a("p",[e._v("请求HTTP请求：合并文件、CSS精灵、inline Image")])]),a("li",[a("p",[e._v("减少DNS查询")]),a("ul",[a("li",[e._v("DNS查询完成之前浏览器不能从这个主机下载任何任何文件。方法：DNS缓存、将资源分布到恰当数量的主机名，平衡并行下载和DNS查询")])])]),a("li",[a("p",[e._v("避免重定向：多余的中间访问")]),a("ul",[a("li",[e._v("重定向状态码：302Found被找到了，但不在原来的地址，临时重定向")]),a("li",[e._v("状态码：301Move Permanently 永久重定向")]),a("li",[e._v("对用户来说，301、302没有区别；对搜索引擎来说，区别很大")])])]),a("li",[a("p",[e._v("使Ajax可缓存")])]),a("li",[a("p",[e._v("非必须组件延迟加载")])]),a("li",[a("p",[e._v("未来所需组件预加载")])]),a("li",[a("p",[e._v("减少DOM元素数量"),a("br"),e._v("\n优化DOM操作的方式："),a("br"),e._v("\n1.1 用cssText来合并多次DOM操作。")]),a("pre",[a("code",[e._v("  var el = document.getElementById('mydiv');   \n  el.style.borderLeft = '1px';   \n  el.style.borderRight = '2px';   \n  el.style.padding = '5px';  \n")])])])]),a("p",[e._v("改为：")]),a("pre",[a("code",[e._v("\tvar el = document.getElementById('mydiv');   \n\tl.style.cssText = 'border-left: 1px; border-right: 2px; padding: 5px;';  \n")])]),a("p",[e._v("1.2 将需要多次重排的元素position设置为absolute和fixed,这样元素就脱离了文档流，它的变化就不会影响其他元素的渲染。例如针对有动画效果的元素。"),a("br"),e._v("\n1.3 减少对DOM元素的查询和修改，查询时可将其赋值给局部变量。")]),a("pre",[a("code",[e._v('\t divUpdate.innerHTML = "";\n\t for ( var i=0; i<100; i++ )\n\t {\n\t  divUpdate.innerHTML += "<SPAN>This is a slower method! </SPAN>";\n\t }\n')])]),a("p",[e._v("改成：")]),a("ul",[a("li",[e._v("将资源放到不同的域下：浏览器同时从一个域下载资源的数目有限，增加域可以提高并行下载量")]),a("li",[e._v("减少iframe数量")]),a("li",[e._v("不要404")])]),a("p",[e._v("Server方面")]),a("ul",[a("li",[a("p",[e._v("使用CDN"),a("br"),e._v("\n内容分发网络，就近使用服务器获得资源，减少网络拥塞。")])]),a("li",[a("p",[e._v("添加Expires或者Cache-Control响应头")]),a("ul",[a("li",[e._v("当服务器开启了expire模块的时候，浏览器发送请求，服务器机会返回一个带expire的http请求头")]),a("li",[e._v("expire头的值是一个时间值，值就是资源在本地的过期时间、存在本地、在本地缓存阶段，找到一个对应的资源值，当前时间还没超过资源的过期时间，就直接使用这一个资源，不会发送http请求。")]),a("li",[e._v("cache-control和expires类似，但是有更多的选项值。")])])]),a("li",[a("p",[e._v("对组件使用Gzip压缩")]),a("ul",[a("li",[e._v("本地压缩")]),a("li",[e._v("服务器压缩")])])]),a("li",[a("p",[e._v("配置实体标签ETag")])]),a("li",[a("p",[e._v("Flush Buffer Early")])]),a("li",[a("p",[e._v("Ajax使用GET进行请求")])]),a("li",[a("p",[e._v("避免空src的img标签")])]),a("li",[a("p",[e._v("Cookie方面")])]),a("li",[a("p",[e._v("减小cookie大小")])]),a("li",[a("p",[e._v("引入资源的域名不要包含cookie")])])]),a("p",[e._v("css方面")]),a("ul",[a("li",[e._v("将样式表放到页面顶部")]),a("li",[e._v("不使用CSS表达式\n"),a("ul",[a("li",[e._v("css表达式：就是将CSS和javascript联系起来。")])])]),a("li",[e._v("使用不使用@import")]),a("li",[e._v("不使用IE的Filter")])]),a("p",[e._v("Javascript方面")]),a("ul",[a("li",[e._v("将脚本放到页面底部")]),a("li",[e._v("将javascript和css从外部引入\n"),a("ul",[a("li",[e._v("提高了复用性")]),a("li",[e._v("减少页面体积")]),a("li",[e._v("提高了可维护性")]),a("li",[e._v("利大于弊，缺点是页面的渲染速度有下降")])])]),a("li",[e._v("压缩javascript和css\n"),a("ul",[a("li",[e._v("在正式上线项目之前，将js和CSS都进行压缩，使线上版本是最轻量的。")])])]),a("li",[e._v("删除不需要的脚本")]),a("li",[e._v("减少DOM访问")]),a("li",[e._v("合理设计事件监听器")])]),a("p",[e._v("图片方面")]),a("ul",[a("li",[e._v("优化图片：根据实际颜色需要选择色深、压缩")]),a("li",[e._v("优化css精灵")]),a("li",[e._v("不要在HTML中拉伸图片")]),a("li",[e._v("保证favicon.ico小并且可缓存")])]),a("p",[e._v("移动方面")]),a("ul",[a("li",[e._v("保证组件小于25k")])]),a("h3",{attrs:{id:"_11-css有哪些继承属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-css有哪些继承属性","aria-hidden":"true"}},[e._v("#")]),e._v(" 11.CSS有哪些继承属性")]),a("ul",[a("li",[e._v("关于文字排版的属性如：\n"),a("ul",[a("li",[e._v("font")]),a("li",[e._v("text-align")]),a("li",[e._v("text-shadow(文字阴影)")]),a("li",[e._v("text-transform(控制文本的大小写)")]),a("li",[e._v("text-indent（规定文本块中首行文本的缩进）")]),a("li",[e._v("word-spacing（改变字（单词）之间的标准间隔）")]),a("li",[e._v("letter-spacing（修改字符或字母之间的间隔）")]),a("li",[e._v("word-break（）")])])]),a("li",[e._v("line-height")]),a("li",[e._v("color")]),a("li",[e._v("visibility")]),a("li",[e._v("cursor")])]),a("h3",{attrs:{id:"_12-web前端项目的结构是怎样的？文件有哪些命名规范？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-web前端项目的结构是怎样的？文件有哪些命名规范？","aria-hidden":"true"}},[e._v("#")]),e._v(" 12.Web前端项目的结构是怎样的？文件有哪些命名规范？")]),a("p",[e._v("js、css、html、图片、数据文件分类命名。")]),a("h3",{attrs:{id:"_13-css样式书写有哪些规范？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-css样式书写有哪些规范？","aria-hidden":"true"}},[e._v("#")]),e._v(" 13.css样式书写有哪些规范？")]),a("ul",[a("li",[e._v("书写顺序"),a("br"),e._v("\n1.位置属性(position, top, right,z-index, display, float等)"),a("br"),e._v("\n2.大小(width, height, padding,margin)"),a("br"),e._v("\n3.文字系列(font, line-height,letter-spacing, color- text-align等)"),a("br"),e._v("\n4.背景(background, border等)"),a("br"),e._v("\n5.其他(animation, transition等)")]),a("li",[e._v("书写规范")]),a("li",[e._v("命名规范。标签的选择以及class、id属性要符合语义化。")]),a("li",[e._v("注释规范。/* 这样的注释规范 */")])]),a("h3",{attrs:{id:"_14-iframe有哪些缺点？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-iframe有哪些缺点？","aria-hidden":"true"}},[e._v("#")]),e._v(" 14.iframe有哪些缺点？")]),a("p",[e._v("优点：")]),a("ol",[a("li",[e._v("解决加载缓慢的第三方内容如图标和广告等的加载问题")]),a("li",[e._v("Security sandbox")]),a("li",[e._v("并行加载脚本")])]),a("p",[e._v("缺点：")]),a("ol",[a("li",[e._v("iframe会阻塞主页面的Onload事件")]),a("li",[e._v("即时内容为空，加载也需要时间")]),a("li",[e._v("没有语意")])]),a("h3",{attrs:{id:"_15-元素定位有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-元素定位有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 15.元素定位有哪些？")]),a("p",[e._v("position是元素定位属性：")]),a("ul",[a("li",[e._v("absolute绝对定位"),a("br"),e._v("\n相对位置为父元素为非static的第一个父元素进行定位。")]),a("li",[e._v("fixed 固定定位（老IE6不支持）"),a("br"),e._v("\n相对于浏览器窗口进行定位。")]),a("li",[e._v("relative相对定位"),a("br"),e._v("\n相对于其正常（默认布局）位置进行定位。")]),a("li",[e._v("static"),a("br"),e._v("\n默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）")])]),a("p",[e._v("所有的定位如果left、top、right、bottom属性都为默认值，则为默认定位\nabsolute定位会脱离文档，浮动起来，多个层重叠可以使用z-index属性改变层叠顺序\nabsolute定位忽略padding，相对位置为相对定位容器的左上角内边框，")]),a("h3",{attrs:{id:"_16-before和：before有什么区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-before和：before有什么区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 16.::before和：before有什么区别？")]),a("ul",[a("li",[e._v("相同点\n"),a("ul",[a("li",[e._v("都可以用来表示伪类对象，用来设置对象前的内容")]),a("li",[e._v(":befor和::before写法是等效的")])])]),a("li",[e._v("不同点\n"),a("ul",[a("li",[e._v(":befor是Css2的写法，::before是Css3的写法")]),a("li",[e._v(":before的兼容性要比::before好 ，不过在H5开发中建议使用::before比较好")])])])]),a("h3",{attrs:{id:"_17-css的优先级是怎样的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-css的优先级是怎样的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 17.CSS的优先级是怎样的？")]),a("p",[e._v("!important>style>权重值，其中标签的权重值是1，class的权重值是10，id的权重值是100，如果权重值相同，则遵循就近原则。最后定义的那个属性起作用。")]),a("h3",{attrs:{id:"_18-如何居中一个元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-如何居中一个元素？","aria-hidden":"true"}},[e._v("#")]),e._v(" 18.如何居中一个元素？")]),a("ul",[a("li",[e._v("元素水平居中的方式\n"),a("ul",[a("li",[e._v("行级元素水平居中对齐：在父元素中设置一个text-align:center;")]),a("li",[e._v("块级元素水平居中对齐：父元素设置text-align:center，该元素自身设置为margin:0 auto;")]),a("li",[e._v("浮动元素水平居中对齐：\n"),a("ul",[a("li",[e._v("可以在外层加一个div，外层的div采用margin居中，里层的div设置宽度为100%。")]),a("li",[e._v("设置当前div的宽度，然后设置margin-left:50%; position:relative; left:-250px;其中的left是宽度的一半。")])])])])]),a("li",[e._v("元素垂直居中对齐\n"),a("ul",[a("li",[e._v("行级元素垂直居中：对行级元素垂直居中（heiht与line-height的值一样）")]),a("li",[e._v("块级元素垂直居中：\n"),a("ul",[a("li",[e._v("父元素高度固定:父元素的height与line-height值相同;需要垂直居中的元素\n"),a("blockquote",[a("p",[e._v("vertical-align:middle;// 垂直居中对齐"),a("br"),e._v("\ndisplay:inline|inline-block //块级元素转行级元素")])])]),a("li",[e._v("父元素高度不固定：设置父元素的padding-top和padding-bottom一样")])])])])])]),a("h3",{attrs:{id:"_19-为什么要初始化样式？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-为什么要初始化样式？","aria-hidden":"true"}},[e._v("#")]),e._v(" 19.为什么要初始化样式？")]),a("p",[e._v("因为浏览器的兼容的问题，不同浏览器有些标签的默认值是不同的，如果没有CSS初始化往往会出现浏览器之间的")]),a("h3",{attrs:{id:"_20-用纯css创建一个三角形的原理是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-用纯css创建一个三角形的原理是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 20.用纯CSS创建一个三角形的原理是什么？")]),a("p",[e._v("border：分别设置上下左右border属性，然后将其他的border设置为transparent。")]),a("h3",{attrs:{id:"_21-css样式-如何清除元素浮动？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-css样式-如何清除元素浮动？","aria-hidden":"true"}},[e._v("#")]),e._v(" 21.CSS样式-如何清除元素浮动？")]),a("p",[e._v("1、clear:both；"),a("br"),e._v("\n2、overflow:hidden；"),a("br"),e._v("\n3、浮动父元素；"),a("br"),e._v("\n4、在浮动元素的后面添加一个去除浮动的元素。")]),a("h3",{attrs:{id:"_22-css3有哪些新特性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-css3有哪些新特性？","aria-hidden":"true"}},[e._v("#")]),e._v(" 22.CSS3有哪些新特性？")]),a("ol",[a("li",[e._v("CSS3实现圆角（border-radius），阴影（box-shadow），")]),a("li",[e._v("对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）")]),a("li",[e._v("transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);// 旋转,缩放,定位,倾斜")]),a("li",[e._v("增加了更多的CSS选择器  多背景 rgba")]),a("li",[e._v("在CSS3中唯一引入的伪类是 ::selection.")]),a("li",[e._v("媒体查询，多栏布局")]),a("li",[e._v("border-image")])]),a("h3",{attrs:{id:"_23-html5有哪些新特性、移除了那些元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-html5有哪些新特性、移除了那些元素？","aria-hidden":"true"}},[e._v("#")]),e._v(" 23.html5有哪些新特性、移除了那些元素？")]),a("p",[e._v("新特性："),a("br"),e._v("\nHTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。")]),a("ol",[a("li",[e._v("拖拽释放(Drag and drop) API")]),a("li",[e._v("语义化更好的内容标签（header,nav,footer,aside,article,section）")]),a("li",[e._v("音频、视频API(audio,video)")]),a("li",[e._v("画布(Canvas) API")]),a("li",[e._v("地理(Geolocation) API")]),a("li",[e._v("本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；")]),a("li",[e._v("sessionStorage 的数据在浏览器关闭后自动删除")]),a("li",[e._v("表单控件，calendar、date、time、email、url、search")]),a("li",[e._v("新的技术webworker, websocket, Geolocation")])]),a("p",[e._v("移除的元素：")]),a("ol",[a("li",[e._v("纯表现的元素：basefont，big，center，font, s，strike，tt，u；")]),a("li",[e._v("对可用性产生负面影响的元素：frame，frameset，noframes；")])]),a("p",[e._v("支持HTML5新标签：")]),a("ol",[a("li",[a("p",[e._v("IE8/IE7/IE6支持通过 document.createElement 方法产生的标签，可以利用这一特性让这些浏览器支持 HTML5 新标签，浏览器支持新标签后，还需要添加标签默认的样式（当然最好的方式是直接使用成熟的框架、使用最多的是html5shiv框架）：")]),a("pre",[a("code",[e._v(' \x3c!--[if lt IE 9]> \n <script> src="http://html5shiv.googlecode.com/svn/trunk/html5.js"<\/script> \n <![endif]--\x3e \n')])])])]),a("p",[e._v("如何区分：\nDOCTYPE声明新增的结构元素、功能元素")]),a("h3",{attrs:{id:"_24-img标签上title和alt属性的区别是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-img标签上title和alt属性的区别是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 24.img标签上title和alt属性的区别是什么？")]),a("p",[e._v("alt当图片不显示时是文字代表"),a("br"),e._v("\ntitle为该属性提供信息")]),a("h3",{attrs:{id:"_25-页面优化有哪些方法？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-页面优化有哪些方法？","aria-hidden":"true"}},[e._v("#")]),e._v(" 25.页面优化有哪些方法？")]),a("ul",[a("li",[e._v("代码层面：避免使用css表达式，避免使用高级选择器，通配选择器。")]),a("li",[e._v("缓存利用：缓存Ajax，使用CDN，使用外部js和css文件以便缓存，添加Expires头，服务端配置Etag，减少DNS查找等")]),a("li",[e._v("请求数量：合并样式和脚本，使用css图片精灵，初始首屏之外的图片资源按需加载，静态资源延迟加载。")]),a("li",[e._v("请求带宽：压缩文件，开启GZIP，")]),a("li",[e._v("代码层面的优化\n"),a("ul",[a("li",[e._v("用hash-table来优化查找")]),a("li",[e._v("少用全局变量")]),a("li",[e._v("用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能")]),a("li",[e._v("用setTimeout来避免页面失去响应")]),a("li",[e._v("缓存DOM节点查找的结果")]),a("li",[e._v("避免使用CSS Expression")]),a("li",[e._v("避免全局查询")]),a("li",[e._v("避免使用with(with会创建自己的作用域，会增加作用域链长度)")]),a("li",[e._v("多个变量声明合并")]),a("li",[e._v("避免图片和iFrame等的空Src。空Src会重新加载当前页面，影响速度和效率")]),a("li",[e._v("尽量避免写在HTML标签中写Style属性")])])])]),a("h3",{attrs:{id:"_26-常见的兼容性问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-常见的兼容性问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 26.常见的兼容性问题")]),a("ul",[a("li",[e._v("png24位的图片在iE6浏览器上出现背景，解决方案是做成PNG8.")]),a("li",[e._v("浏览器默认的margin和padding不同。解决方案是加一个全局的*{margin:0;padding:0;}来统一。")]),a("li",[e._v("IE6双边距bug:块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大。\n浮动ie产生的双倍距离 #box{ float:left; width:10px; margin:0 0 0 100px;}\n这种情况之下IE会产生20px的距离，解决方案是在float的标签样式控制中加入 ——_display:inline;将其转化为行内属性。(_这个符号只有ie6会识别)\n渐进识别的方式，从总体中逐渐排除局部。"),a("br"),e._v("\n首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。 接着，再次使用“+”将IE8和IE7、IE6分离开来，这样IE8已经独立识别。"),a("br"),e._v("\ncss")])]),a("blockquote",[a("pre",[a("code",[e._v(".bb{\n")])])]),a("pre",[a("code",[e._v("   background-color:#f1ee18;/*所有识别*/   \n  .background-color:#00deff\\9; /*IE6、7、8识别*/   \n  +background-color:#a200ff;/*IE6、7识别*/   \n  _background-color:#1e0bd1;/*IE6识别*/\n  }\n")])]),a("ul",[a("li",[e._v("IE下,可以使用获取常规属性的方法来获取自定义属性,\n也可以使用getAttribute()获取自定义属性;\nFirefox下,只能使用getAttribute()获取自定义属性.\n解决方法:统一通过getAttribute()获取自定义属性.")]),a("li",[e._v("IE下,even对象有x,y属性,但是没有pageX,pageY属性; Firefox下,event对象有pageX,pageY属性,但是没有x,y属性.")]),a("li",[e._v("解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。")]),a("li",[e._v("Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示, 可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决.\n超链接访问过后hover样式就不出现了 被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:L-V-H-A : a:link {} a:visited {} a:hover {} a:active {}")])]),a("h3",{attrs:{id:"_27-你知道什么是css-reset么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-你知道什么是css-reset么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 27.你知道什么是CSS reset么？")]),a("p",[e._v("reset重置浏览器的CSS默认属性，浏览器的品种不同、样式不同，然后重置，让他们统一。")]),a("h3",{attrs:{id:"_28-圣杯布局、双飞翼布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-圣杯布局、双飞翼布局","aria-hidden":"true"}},[e._v("#")]),e._v(" 28.圣杯布局、双飞翼布局")]),a("ul",[a("li",[e._v("圣杯布局和双飞翼布局是一回事，都是实现三栏布局，左右两栏宽度固定，中间盒子自适应。它们实现的效果是一样的，差别在于其实现的效果。")]),a("li",[e._v("圣杯布局起源于一篇文章，双飞翼布局源于淘宝的UED。")])]),a("h3",{attrs:{id:"_29-css选择符有哪些？哪些属性可以继承？优先级算法如何计算？css3新增伪类有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-css选择符有哪些？哪些属性可以继承？优先级算法如何计算？css3新增伪类有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 29.CSS选择符有哪些？哪些属性可以继承？优先级算法如何计算？CSS3新增伪类有哪些？")]),a("p",[e._v("1.id选择器（ # myid）"),a("br"),e._v("\n2.类选择器（.myclassname）"),a("br"),e._v("\n3.标签选择器（div, h1, p）"),a("br"),e._v("\n4.相邻选择器（h1 + p）"),a("br"),e._v("\n5.子选择器（ul > li）"),a("br"),e._v("\n6.后代选择器（li a）"),a("br"),e._v("\n7.通配符选择器（ * ）"),a("br"),e._v('\n8.属性选择器（a[rel = "external"]）'),a("br"),e._v("\n9.伪类选择器（a: hover, li: nth - child）"),a("br"),e._v("\n可继承的样式： font-size font-family color, UL LI DL DD DT;\n不可继承的样式：border padding margin width height;"),a("br"),e._v("\n优先级就近原则，同权重情况下样式定义最近者为准;\n载入样式以最后载入的定位为准;\n优先级为:\n!important >  id > class > tag")]),a("pre",[a("code",[e._v("  important 比 内联优先级高\n")])]),a("p",[e._v("CSS3新增伪类举例：")]),a("pre",[a("code",[e._v("p:first-of-type    选择属于其父元素的首个 <p> 元素的每个 <p> 元素。\np:last-of-type    选择属于其父元素的最后 <p> 元素的每个 <p> 元素。\np:only-of-type    选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。\np:only-child    选择属于其父元素的唯一子元素的每个 <p> 元素。\np:nth-child(2)    选择属于其父元素的第二个子元素的每个 <p> 元素。\n:enabled  :disabled 控制表单控件的禁用状态。\n:checked        单选框或复选框被选中\n")])]),a("h3",{attrs:{id:"_30-前端要注意的seo有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-前端要注意的seo有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 30.前端要注意的SEO有哪些？")]),a("ul",[a("li",[e._v("合理的title、description、keywords：搜索对着三项的权重逐个减小，title值强调重点即可，重要关键词出现不要超过2次，而且要靠前，不同页面title要有所不同；")]),a("li",[e._v("description把页面内容高度概括，长度合适，不可过分堆砌关键词，不同页面description有所不同；")]),a("li",[e._v("keywords列举出重要关键词即可")]),a("li",[e._v("语义化的HTML代码，符合W3C规范：语义化代码让搜索引擎容易理解网页")]),a("li",[e._v("重要内容HTML代码放在最前：搜索引擎抓取HTML顺序是从上到下，有的搜索引擎对抓取长度有限制，保证重要内容一定会被抓取")]),a("li",[e._v("重要内容不要用js输出：爬虫不会执行js获取内容")]),a("li",[e._v("少用iframe：搜索引擎不会抓取iframe中的内容")]),a("li",[e._v("非装饰性图片必须加alt")]),a("li",[e._v("提高网站速度：网站速度是搜索引擎排序的一个重要指标")])]),a("h3",{attrs:{id:"_31-什么是web语义化？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31-什么是web语义化？","aria-hidden":"true"}},[e._v("#")]),e._v(" 31.什么是WEB语义化？")]),a("p",[e._v("用正确的标签做正确的事情！\nhtml语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；\n在没有样式CCS情况下也以一种文档格式显示，并且是容易阅读的。\n搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。\n使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。")]),a("ul",[a("li",[a("p",[e._v("web语义化是指通过HTML标记表示页面包含的信息，包含了HTML标签的语义化和css命名的语义化。")])]),a("li",[a("p",[e._v("HTML标签的语义化是指：通过使用包含语义的标签（如h1-h6）恰当地表示文档结构")])]),a("li",[a("p",[e._v("css命名的语义化是指：为html标签添加有意义的class，id补充未表达的语义，如Microformat通过添加符合规则的class描述信息")])]),a("li",[a("p",[e._v("为什么需要语义化："),a("br"),e._v("\n去掉样式后页面呈现清晰的结构\n盲人使用读屏器更好地阅读\n搜索引擎更好地理解页面，有利于收录\n便团队项目的可持续运作及维护")])])]),a("h3",{attrs:{id:"_32-doctype是什么-html5为什么只需要写-doctype-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32-doctype是什么-html5为什么只需要写-doctype-html","aria-hidden":"true"}},[e._v("#")]),e._v(" 32.doctype是什么,HTML5为什么只需要写"),a("code",[e._v("<!DOCTYPE html>")])]),a("p",[a("code",[e._v("<!DOCTYPE>")]),e._v("声明位于位于HTML文档中的第一行，处于"),a("code",[e._v("<html>")]),e._v("标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。")]),a("p",[e._v("HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；\n而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。")]),a("h3",{attrs:{id:"_33-css-hack原理及常用hack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33-css-hack原理及常用hack","aria-hidden":"true"}},[e._v("#")]),e._v(" 33.css hack原理及常用hack")]),a("p",[e._v("由于不同的浏览器和浏览器各版本对CSS的支持及解析结果不一样，以及CSS优先级对浏览器展现效果的影响，我们可以据此针对不同的浏览器情景来应用不同的CSS。")]),a("h3",{attrs:{id:"_34-css-sprite是什么-有什么优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34-css-sprite是什么-有什么优缺点","aria-hidden":"true"}},[e._v("#")]),e._v(" 34.css sprite是什么,有什么优缺点")]),a("p",[e._v("概念：将多个小图片拼接到一个图片中。通过background-position和元素尺寸调节需要显示的背景图案。减少服务器对图片的请求数量。"),a("br"),e._v("\n优点：")]),a("ul",[a("li",[e._v("减少HTTP请求数，极大地提高页面加载速度")]),a("li",[e._v("增加图片信息重复度，提高压缩比，减少图片大小")]),a("li",[e._v("更换风格方便，只需在一张或几张图片上修改颜色或样式即可实现")])]),a("p",[e._v("缺点：")]),a("ul",[a("li",[e._v("图片合并麻烦")]),a("li",[e._v("维护麻烦，修改一个图片可能需要从新布局整个图片，样式")])]),a("h3",{attrs:{id:"_35-渐进增强和平稳退化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-渐进增强和平稳退化","aria-hidden":"true"}},[e._v("#")]),e._v(" 35.渐进增强和平稳退化")]),a("p",[e._v("渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。")]),a("p",[e._v("优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。")]),a("p",[e._v("区别：优雅降级是从复杂的现状开始，并试图减少用户体验的供给，而渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要。降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带。.")]),a("h3",{attrs:{id:"_36-display-none-与visibility-hidden-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36-display-none-与visibility-hidden-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 36.display: none;与visibility: hidden;的区别")]),a("p",[e._v("区别：")]),a("ol",[a("li",[e._v("display:none;会让元素完全从渲染树中消失，渲染的时候不占据任何空间；visibility: hidden;不会让元素从渲染树消失，渲染师元素继续占据空间，只是内容不可见")]),a("li",[e._v("display: none;是非继承属性，子孙节点消失由于元素从渲染树消失造成，通过修改子孙节点属性无法显示；visibility: hidden;是继承属性，子孙节点消失由于继承了hidden，通过设置visibility: visible;可以让子孙节点显式")]),a("li",[e._v("修改常规流中元素的display通常会造成文档重排。修改visibility属性只会造成本元素的重绘。")]),a("li",[e._v("读屏器不会读取display: none;元素内容；会读取visibility: hidden;元素内容")])]),a("h3",{attrs:{id:"_37-什么是bfc-如何实现？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37-什么是bfc-如何实现？","aria-hidden":"true"}},[e._v("#")]),e._v(" 37.什么是BFC?如何实现？")]),a("p",[e._v("(1)、什么是BFC与IFC")]),a("p",[e._v("a、BFC（Block Formatting Context）即“块级格式化上下文”， IFC（Inline Formatting Context）即行内格式化上下文。常规流（也称标准流、普通流）是一个文档在被显示时最常见的布局形态。一个框在常规流中必须属于一个格式化上下文，你可以把BFC想象成一个大箱子，箱子外边的元素将不与箱子内的元素产生作用。")]),a("p",[e._v("b、BFC是W3C CSS 2.1 规范中的一个概念，它决定了元素如何对其内容进行定位，以及与其他元素的关系和相互作用。当涉及到可视化布局的时候，Block Formatting Context提供了一个环境，HTML元素在这个环境中按照一定规则进行布局。一个环境中的元素不会影响到其它环境中的布局。比如浮动元素会形成BFC，浮动元素内部子元素的主要受该浮动元素影响，两个浮动元素之间是互不影响的。也可以说BFC就是一个作用范围。")]),a("p",[e._v("c、在普通流中的 Box(框) 属于一种 formatting context(格式化上下文) ，类型可以是 block ，或者是 inline ，但不能同时属于这两者。并且， Block boxes(块框) 在 block formatting context(块格式化上下文) 里格式化， Inline boxes(块内框) 则在 Inline Formatting Context(行内格式化上下文) 里格式化。")]),a("p",[e._v("(2)、如何产生BFC")]),a("p",[e._v("当一个HTML元素满足下面条件的任何一点，都可以产生Block Formatting Context：")]),a("pre",[a("code",[e._v("a、float的值不为none    \nb、overflow的值不为visible   \nc、display的值为table-cell, table-caption, inline-block中的任何一个    \nd、position的值不为relative和static\n")])]),a("p",[e._v("CSS3触发BFC方式则可以简单描述为：在元素定位非static，relative的情况下触发，float也是一种定位方式。")]),a("p",[e._v("(3)、BFC的作用与特点"),a("br"),e._v("\na、不和浮动元素重叠，清除外部浮动，阻止浮动元素覆盖")]),a("p",[e._v("如果一个浮动元素后面跟着一个非浮动的元素，那么就会产生一个重叠的现象。常规流（也称标准流、普通流）是一个文档在被显示时最常见的布局形态，当float不为none时，position为absolute、fixed时元素将脱离标准流。")]),a("h3",{attrs:{id:"_38-行内元素有哪些？块级元素有哪些？空元素有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38-行内元素有哪些？块级元素有哪些？空元素有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 38.行内元素有哪些？块级元素有哪些？空元素有哪些？")]),a("p",[e._v("首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。")]),a("pre",[a("code",[e._v("（1）行内元素有：a b span img input select strong（强调的语气）\n（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p\n（3）常见的空元素：\n    <br> <hr> <img> <input> <link> <meta>\n    鲜为人知的是：\n    <area> <base> <col> <command> <embed> <keygen> <param> <source> <track> <wbr>\n")])]),a("h3",{attrs:{id:"_39-documen-write和-innerhtml的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39-documen-write和-innerhtml的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 39.documen.write和 innerHTML的区别")]),a("p",[e._v("document.write只能重绘整个页面，innerHTML可以重绘页面的一部分")]),a("h3",{attrs:{id:"_40-xhtml与html的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40-xhtml与html的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 40.XHTMl与HTMl的区别")]),a("p",[e._v("HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言\n最主要的不同：")]),a("ul",[a("li",[e._v("XHTML 元素必须被正确地嵌套。")]),a("li",[e._v("XHTML 元素必须被关闭。")]),a("li",[e._v("标签名必须用小写字母。")]),a("li",[e._v("XHTML 文档必须拥有根元素。")])]),a("h3",{attrs:{id:"_41-前端页面有哪三层构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_41-前端页面有哪三层构","aria-hidden":"true"}},[e._v("#")]),e._v(" 41. 前端页面有哪三层构")]),a("pre",[a("code",[e._v("- 发送包含未知字符的用户输入时，POST 比 GET 更稳定也更成，分别是什么?作用是什么?\n")])]),a("ul",[a("li",[e._v("结构层 Html")]),a("li",[e._v("表示层 CSS")]),a("li",[e._v("行为层 js")])]),a("h3",{attrs:{id:"_42-用什么管理代码？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_42-用什么管理代码？","aria-hidden":"true"}},[e._v("#")]),e._v(" 42.用什么管理代码？")]),a("p",[e._v("git,svn")]),a("h3",{attrs:{id:"_43-css和js的压缩办法？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_43-css和js的压缩办法？","aria-hidden":"true"}},[e._v("#")]),e._v(" 43.CSS和JS的压缩办法？")]),a("p",[e._v("用前端构建工具gulp,grunt,webpack压缩。")]),a("h3",{attrs:{id:"_44-解释下-css-sprites，以及你要如何在页面或网站中使用它。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_44-解释下-css-sprites，以及你要如何在页面或网站中使用它。","aria-hidden":"true"}},[e._v("#")]),e._v(" 44.解释下 CSS sprites，以及你要如何在页面或网站中使用它。")]),a("p",[e._v('CSS Sprites 其实就是把网页中一些背景图片整合到一张图片文件中，再利用 CSS 的"background-image"，"background-repeat"，"background-position" 的组合进行背景定位，background-position 可以用数字能精确的定位出背景图片的位置。这样可以减少很多图片请求的开销，因为请求耗时比较长；请求虽然可以并发，但是也有限制，一般浏览器都是6个。对于未来而言，就不需要这样做了，因为有了 http2。')]),a("h3",{attrs:{id:"_44-media-queries是否通过设备类型、设备宽度来过滤设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_44-media-queries是否通过设备类型、设备宽度来过滤设备","aria-hidden":"true"}},[e._v("#")]),e._v(" 44.Media Queries是否通过设备类型、设备宽度来过滤设备")]),a("p",[e._v("CSS3的MediaQueries可以帮助设计师获取以下数据：")]),a("ol",[a("li",[e._v("浏览器的窗口的宽度和高度，")]),a("li",[e._v("设备的宽和高；")]),a("li",[e._v("设备的手持方面，横向还是竖向；")]),a("li",[e._v("分辨率；")])]),a("h3",{attrs:{id:"_45-了解过flex布局吗？说说它和传统布局的有何不同？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_45-了解过flex布局吗？说说它和传统布局的有何不同？","aria-hidden":"true"}},[e._v("#")]),e._v(" 45.了解过flex布局吗？说说它和传统布局的有何不同？")]),a("p",[e._v("flexbox是position的一个属性，")]),a("h3",{attrs:{id:"_46-title与h1的区别、b与strong的区别、i与em的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_46-title与h1的区别、b与strong的区别、i与em的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 46.title与h1的区别、b与strong的区别、i与em的区别？")]),a("ul",[a("li",[e._v("title和h1的区别\n"),a("ul",[a("li",[e._v("title在网站的标签上显示，告诉搜索引擎网站的主题，h1一般用于文章的标题。")]),a("li",[e._v("h1强调文章，突出视觉效果，title用于突出网页主体信息。")])])]),a("li",[e._v("b与strong的区别\n"),a("ul",[a("li",[e._v("b和strong的视觉效果是一样的")]),a("li",[e._v("b仅仅强调样式，强调视觉，而strong是为了加强语气，提醒读者注意。")])])]),a("li",[e._v("i与em的区别\n"),a("ul",[a("li",[e._v("i和em的视觉效果也是一样的")]),a("li",[e._v("i是强调视觉，em是强调主题。")])])])]),a("h3",{attrs:{id:"_47-网页验证码是干嘛的，是为了解决什么安全问题？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_47-网页验证码是干嘛的，是为了解决什么安全问题？","aria-hidden":"true"}},[e._v("#")]),e._v(" 47.网页验证码是干嘛的，是为了解决什么安全问题？")]),a("p",[e._v("防止恶意脚本的执行，网页验证码有不容易被计算机识别的图像。")]),a("h3",{attrs:{id:"_48-浏览器的标准模式、怪异模式。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_48-浏览器的标准模式、怪异模式。","aria-hidden":"true"}},[e._v("#")]),e._v(" 48.浏览器的标准模式、怪异模式。")]),a("p",[e._v("标准模式：依照W3C标准模式，content不包含padding值和border值。"),a("br"),e._v("\n怪异模式：如果忽略文档声明Doctype,IE浏览器就会按照IE盒子模型来渲染页面，就是说，如果设置width，height属性，那么在ie浏览器上面，会把padding、border算在上面。")]),a("h3",{attrs:{id:"_49-box-sizing的属性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_49-box-sizing的属性？","aria-hidden":"true"}},[e._v("#")]),e._v(" 49.box-sizing的属性？")]),a("p",[e._v("设置或检索对象的盒模型组成模式")]),a("ul",[a("li",[e._v("box-sizing:content-box： padding和border不被包含在定义的width和height之内。对象的实际宽度等于设置的width值和border、padding之和，即 ( Element width = width + border + padding，但占有页面位置还要加上margin ) 此属性表现为标准模式下的盒模型。")]),a("li",[e._v("box-sizing:border-box： padding和border被包含在定义的width和height之内。对象的实际宽度就等于设置的width值，即使定义有border和padding也不会改变对象的实际宽度，即 ( Element width = width ) 此属性表现为怪异模式下的盒模型。")])]),a("h3",{attrs:{id:"_50-html常见兼容性问题？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_50-html常见兼容性问题？","aria-hidden":"true"}},[e._v("#")]),e._v(" 50.html常见兼容性问题？")]),a("p",[e._v("用构造函数和原型链的混合模式去实现继承，避免对象共享可以参考经典的extend()函数，很多前端框架都有封装的，就是用一个空函数当做中间变量")]),a("ol",[a("li",[a("p",[e._v("png24位的图片在iE6浏览器上出现背景\n解决方案：做成PNG8，也可以引用一段脚本处理.")])]),a("li",[a("p",[e._v("浏览器默认的margin和padding不同\n解决方案：加一个全局的 *{margin:0;padding:0;} 来统一。")])]),a("li",[a("p",[e._v("IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或margin-right，margin值会加倍。")]),a("pre",[a("code",[e._v(" #box{float:left; width:10px; margin:0 0 0 10px;} \n")])])])]),a("p",[e._v("这种情况之下IE会产生20px的距离\n解决方案：在float的标签样式控制中加入 _display:inline; 将其转化为行内属性。( _ 这个符号只有ie6会识别)")]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[e._v('渐进识别的方式，从总体中逐渐排除局部。\n首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。\n接着，再次使用 "+" 将IE8和IE7、IE6分离开来，这样IE8已经独立识别。')]),a("pre",[a("code",[e._v(" .bb{\n     background-color:#f1ee18; /*所有识别*/\n     .background-color:#00deff\\9; /*IE6、7、8识别*/\n     +background-color:#a200ff; /*IE6、7识别*/\n     _background-color:#1e0bd1; /*IE6识别*/ \n } \n")])])])]),a("p",[e._v("5.IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用 getAttribute() 获取自定义属性；Firefox下,只能使用getAttribute()获取自定义属性\n解决方法：统一通过getAttribute()获取自定义属性")]),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[e._v("IE下，event对象有 x、y 属性，但是没有 pageX、pageY属性; Firefox下，event对象有 pageX、pageY 属性，但是没有 x、y 属性\n解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。")])]),a("li",[a("p",[e._v("Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示\n解决方法：可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决")])]),a("li",[a("p",[e._v("超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了\n解决方法：改变CSS属性的排列顺序 L-V-H-A")]),a("pre",[a("code",[e._v(" a:link {}\n a:visited {}\n a:hover {}\n a:active {}\n")])])]),a("li",[a("p",[e._v("怪异模式问题：漏写 DTD 声明，Firefox 仍然会按照标准模式来解析网页，但在 IE 中会触发怪异模式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写 DTD 声明的好习惯。现在可以使用"),a("a",{attrs:{href:"http://www.w3.org/TR/html5/single-page.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("html5")]),e._v(" 推荐的写法："),a("code",[e._v("<!DOCTYPE html>")])])]),a("li",[a("p",[e._v("上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。\n解决方法：养成良好的代码编写习惯，同时采用margin-top或者同时采用margin-bottom。")])]),a("li",[a("p",[e._v("ie6对png图片格式支持不好\n解决方案：引用一段脚本处理")])])]),a("h3",{attrs:{id:"_51-清除浮动的作用是什么？怎样清除？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_51-清除浮动的作用是什么？怎样清除？","aria-hidden":"true"}},[e._v("#")]),e._v(" 51.清除浮动的作用是什么？怎样清除？")]),a("h3",{attrs:{id:"作用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用：","aria-hidden":"true"}},[e._v("#")]),e._v(" 作用：")]),a("p",[e._v("浮动元素引起的问题：")]),a("ol",[a("li",[e._v("父元素的高度无法被撑开，影响与父元素同级的元素")]),a("li",[e._v("与浮动元素同级的非浮动元素会跟随其后")]),a("li",[e._v("若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构")])]),a("h3",{attrs:{id:"清除浮动的几种方法："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动的几种方法：","aria-hidden":"true"}},[e._v("#")]),e._v(" 清除浮动的几种方法：")]),a("ol",[a("li",[a("p",[e._v("额外标签法，"),a("code",[e._v('<div style="clear:both;"></div>')]),e._v("（缺点：不过这个办法会增加额外的标签使HTML结构看起来不够简洁。）")])]),a("li",[a("p",[e._v("使用after伪元素")]),a("pre",[a("code",[e._v(' #parent:after{\n     content:".";\n     height:0;\n     visibility:hidden;\n     display:block;\n     clear:both;\n }\n')])])]),a("li",[a("p",[e._v("浮动外部元素")])]),a("li",[a("p",[e._v("设置 overflow 为 hidden 或者 auto")])]),a("li",[a("p",[e._v("使用空标签清除浮动。\n这种方法是在所有浮动标签后面添加一个空标签 定义css clear:both. 弊端就是增加了无意义标签。")])]),a("li",[a("p",[e._v("使用overflow。\n给包含浮动元素的父标签添加css属性 overflow:auto; zoom:1; zoom:1用于兼容IE6。")])]),a("li",[a("p",[e._v("使用after伪对象清除浮动。\n该方法只适用于非IE浏览器。具体写法可参照以下示例。使用中需注意以下几点。一、该方法中必须为需要清除浮动元素的伪对象中设置 height:0，否则该元素会比实际高出若干像素；")])])]),a("p",[e._v("可以给父元素设置overflow：auto或者hidden")]),a("h3",{attrs:{id:"_52-什么是-fouc（无样式内容闪烁）？你如何来避免-fouc？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_52-什么是-fouc（无样式内容闪烁）？你如何来避免-fouc？","aria-hidden":"true"}},[e._v("#")]),e._v(" 52.什么是 FOUC（无样式内容闪烁）？你如何来避免 FOUC？")]),a("p",[e._v("FOUC - Flash Of Unstyled Content 文档样式闪烁")]),a("pre",[a("code",[e._v('<style type="text/css" media="all">@import "../fouc.css";</style>   \n')])]),a("p",[e._v("而引用CSS文件的@import就是造成这个问题的罪魁祸首。IE会先加载整个HTML文档的DOM，然后再去导 入外部的CSS文件，因此，在页面DOM加载完成到CSS导入完成中间会有一段时间页面上的内容是没有样式的，这段时间的长短跟网速，电脑速度都有关系。"),a("br"),e._v("\n解决方法简单的出奇，只要在"),a("code",[e._v("<head>")]),e._v("之间加入一个"),a("code",[e._v("<link>")]),e._v("或者"),a("code",[e._v("<script>元素")]),e._v("就可以了。")]),a("h3",{attrs:{id:"_53-和-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_53-和-的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 53.===和==的区别")]),a("p",[e._v("===不进行强制类型转换，==会强制类型转换")]),a("h3",{attrs:{id:"_54-三栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_54-三栏布局","aria-hidden":"true"}},[e._v("#")]),e._v(" 54.三栏布局")]),a("p",[e._v("实现三栏布局的方式："),a("br"),e._v("\n1.左右div用float来浮动。缺点：容易被清除浮动给清除掉。"),a("br"),e._v("\n2.圣杯布局、双飞翼布局。"),a("br"),e._v("\n3.绝对定位。")]),a("h3",{attrs:{id:"_55-data-属性的作用是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_55-data-属性的作用是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 55."),a("code",[e._v("data-")]),e._v("属性的作用是什么？")]),a("p",[a("code",[e._v("data-")]),e._v("为H5新增的为前端开发者提供自定义的属性，这些属性集可以通过对象的 "),a("code",[e._v("dataset")]),e._v(" 属性获取，不支持该属性的浏览器可以通过 "),a("code",[e._v("getAttribute")]),e._v(" 方法获取 :")]),a("p",[e._v("需要注意的是："),a("code",[e._v("data-")]),e._v("之后的以连字符分割的多个单词组成的属性，获取的时候使用驼峰风格。 所有主流浏览器都支持 data-* 属性。")]),a("p",[e._v("即：当没有合适的属性和元素时，自定义的 data 属性是能够存储页面或 App 的私有的自定义数据。")]),a("h3",{attrs:{id:"_56-label的作用是什么，是怎么用的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_56-label的作用是什么，是怎么用的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 56.Label的作用是什么，是怎么用的？")]),a("p",[e._v("label标签来定义表单控制间的关系 , 当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。")]),a("pre",[a("code",[e._v("<label for='Name'>Number:</label>\n\n<input type=“ text “ name='Name' id='Name'/>\n<label>Date:<input type='text' name='B'/></label>\n")])]),a("p",[e._v("注意:label的for属性值要与后面对应的input标签id属性值相同")]),a("pre",[a("code",[e._v("<label for='Name'>Number:</label>\n\n<input type=“ text “ name='Name' id='Name'/>\n")])]),a("h3",{attrs:{id:"_57-谈谈你对canvas的理解？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_57-谈谈你对canvas的理解？","aria-hidden":"true"}},[e._v("#")]),e._v(" 57.谈谈你对canvas的理解？")]),a("p",[e._v("canvas是HTML5中新增一个HTML5标签与操作canvas的javascript API，它可以实现在网页中完成动态的2D与3D图像技术。标记和 SVG以及 VML 之间的一个重要的不同是，有一个基于 JavaScript 的绘图 API，而 SVG 和 VML 使用一个 XML 文档来描述绘图。SVG 绘图很容易编辑与生成，但功能明显要弱一些。 canvas可以完成动画、游戏、图表、图像处理等原来需要Flash完成的一些功能。")]),a("h3",{attrs:{id:"_58-html5-有哪些新增的表单元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_58-html5-有哪些新增的表单元素？","aria-hidden":"true"}},[e._v("#")]),e._v(" 58.HTML5 有哪些新增的表单元素？")]),a("p",[e._v("HTML5 新增了很多表单元素让开发者构建更优秀的 Web 应用程序，主要有：")]),a("pre",[a("code",[e._v("datalist\nkeygen\noutput\n")])]),a("h3",{attrs:{id:"_59-说说你对页面中使用定位-position-的理解？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_59-说说你对页面中使用定位-position-的理解？","aria-hidden":"true"}},[e._v("#")]),e._v(" 59.说说你对页面中使用定位(position)的理解？")]),a("p",[e._v("使用css布局position非常重要，语法如下：")]),a("p",[e._v("position：static | relative | absolute | fixed | center | page | sticky"),a("br"),e._v("\n默认值：static，center、page、sticky是CSS3中新增加的值。")]),a("p",[e._v("(1)、static\n可以认为静态的，默认元素都是静态的定位，对象遵循常规流。此时4个定位偏移属性不会被应用，也就是使用left，right，bottom，top将不会生效。")]),a("p",[e._v("(2)、relative\n相对定位，对象遵循常规流，并且参照自身在常规流中的位置通过top，right，bottom，left这4个定位偏移属性进行偏移时不会影响常规流中的任何元素。")]),a("p",[e._v("(3)、absolute\na、绝对定位，对象脱离常规流，此时偏移属性参照的是离自身最近的定位祖先元素，如果没有定位的祖先元素，则一直回溯到body元素。盒子的偏移位置不影响常规流中的任何元素，其margin不与其他任何margin折叠。\nb、元素定位参考的是离自身最近的定位祖先元素，要满足两个条件，第一个是自己的祖先元素，可以是父元素也可以是父元素的父元素，一直找，如果没有则选择body为对照对象。第二个条件是要求祖先元素必须定位，通俗说就是position的属性值为非static都行。")]),a("p",[e._v("(4)、fixed\n固定定位，与absolute一致，但偏移定位是以窗口为参考。当出现滚动条时，对象不会随着滚动。")]),a("p",[e._v("(5)、center\n与absolute一致，但偏移定位是以定位祖先元素的中心点为参考。盒子在其包含容器垂直水平居中。（CSS3）")]),a("p",[e._v("(6)、page\n与absolute一致。元素在分页媒体或者区域块内，元素的包含块始终是初始包含块，否则取决于每个absolute模式。（CSS3）")]),a("p",[e._v("(7)、sticky\n对象在常态时遵循常规流。它就像是relative和fixed的合体，当在屏幕中时按常规流排版，当卷动到屏幕外时则表现如fixed。该属性的表现是现实中你见到的吸附效果。（CSS3）")]),a("h3",{attrs:{id:"_60-页面布局的方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_60-页面布局的方式有哪些？","aria-hidden":"true"}},[e._v("#")]),e._v(" 60. 页面布局的方式有哪些？")]),a("p",[e._v("方式：双飞翼、多栏、弹性、流式、瀑布流、响应式布局")]),a("ul",[a("li",[a("p",[e._v("双飞翼布局\n经典三列布局，也叫做圣杯布局【Holy Grail of Layouts】是Kevin Cornell在2006年提出的一个布局模型概念，在国内最早是由淘宝UED的工程师传播开来，在中国也有叫法是双飞翼布局，它的布局要求有几点："),a("br"),e._v("\na、三列布局，中间宽度自适应，两边定宽；"),a("br"),e._v("\nb、中间栏要在浏览器中优先展示渲染；"),a("br"),e._v("\nc、允许任意列的高度最高；"),a("br"),e._v("\nd、要求只用一个额外的DIV标签；"),a("br"),e._v("\ne、要求用最简单的CSS、最少的HACK语句；"),a("br"),e._v("\n在不增加额外标签的情况下，圣杯布局已经非常完美，圣杯布局使用了相对定位，以后布局是有局限性的，而且宽度控制要改的地方也多。在淘宝UED（User Experience Design）探讨下，增加多一个div就可以不用相对布局了，只用到了浮动和负边距，这就是我们所说的双飞翼布局。")])]),a("li",[a("p",[e._v("多栏布局"),a("br"),e._v("\na、栏栅格系统：就是利用浮动实现的多栏布局，在bootstrap中用的非常多。"),a("br"),e._v("\nb、多列布局：栅格系统并没有真正实现分栏效果（如word中的分栏），CSS3为了满足这个要求增加了多列布局模块")])]),a("li",[a("p",[e._v("弹性布局（Flexbox）"),a("br"),e._v("\nCSS3引入了一种新的布局模式——Flexbox布局，即伸缩布局盒模型（Flexible Box），用来提供一个更加有效的方式制定、调整和分布一个容器里项目布局，即使它们的大小是未知或者动态的，这里简称为Flex。"),a("br"),e._v("\nFlexbox布局常用于设计比较复杂的页面，可以轻松的实现屏幕和浏览器窗口大小发生变化时保持元素的相对位置和大小不变，同时减少了依赖于浮动布局实现元素位置的定义以及重置元素的大小。")])])]),a("p",[e._v("Flexbox布局在定义伸缩项目大小时伸缩容器会预留一些可用空间，让你可以调节伸缩项目的相对大小和位置。例如，你可以确保伸缩容器中的多余空间平均分配多个伸缩项目，当然，如果你的伸缩容器没有足够大的空间放置伸缩项目时，浏览器会根据一定的比例减少伸缩项目的大小，使其不溢出伸缩容器。")]),a("p",[e._v("综合而言，Flexbox布局功能主要具有以下几点："),a("br"),e._v("\na、屏幕和浏览器窗口大小发生改变也可以灵活调整布局；"),a("br"),e._v("\nb、可以指定伸缩项目沿着主轴或侧轴按比例分配额外空间（伸缩容器额外空间），从而调整伸缩项目的大小；"),a("br"),e._v("\nc、可以指定伸缩项目沿着主轴或侧轴将伸缩容器额外空间，分配到伸缩项目之前、之后或之间；\nd、可以指定如何将垂直于元素布局轴的额外空间分布到该元素的周围；"),a("br"),e._v("\ne、可以控制元素在页面上的布局方向；"),a("br"),e._v("\nf、可以按照不同于文档对象模型（DOM）所指定排序方式对屏幕上的元素重新排序。也就是说可以在浏览器渲染中不按照文档流先后顺序重排伸缩项目顺序。")]),a("ul",[a("li",[a("p",[e._v("瀑布流布局"),a("br"),e._v("\n瀑布流布局是流式布局的一种。是当下比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。"),a("br"),e._v("\n优点"),a("br"),e._v("\na、有效的降低了界面复杂度，节省了空间：我们不再需要臃肿复杂的页码导航链接或按钮了。"),a("br"),e._v("\nb、对触屏设备来说，交互方式更符合直觉：在移动应用的交互环境当中，通过向上滑动进行滚屏的操作已经成为最基本的用户习惯，而且所需要的操作精准程度远远低于点击链接或按钮。"),a("br"),e._v("\nc、更高的参与度：以上两点所带来的交互便捷性可以使用户将注意力更多的集中在内容而不是操作上，从而让他们更乐于沉浸在探索与浏览当中。"),a("br"),e._v("\n缺点"),a("br"),e._v("\na、有限的用例："),a("br"),e._v("\n无限滚动的方式只适用于某些特定类型产品当中一部分特定类型的内容。"),a("br"),e._v("\n例如，在电商网站当中，用户时常需要在商品列表与详情页面之间切换，这种情况下，传统的、带有页码导航的方式可以帮助用户更稳妥和准确的回到某个特定的列表页面当中。"),a("br"),e._v("\nb、额外的复杂度："),a("br"),e._v("\n那些用来打造无限滚动的JS库虽然都自称很容易使用，但你总会需要在自己的产品中进行不同程度的定制化处理，以满足你们自己的需求;另外这些JS库在浏览器和设备兼容性等方面的表现也参差不齐，你必须做好充分的测试与调整工作。"),a("br"),e._v("\nc、再见了，页脚："),a("br"),e._v("\n如果使用了比较典型的无限滚动加载模式，这就意味着你可以和页脚说拜拜了。"),a("br"),e._v("\n最好考虑一下页脚对于你的网站，特别是用户的重要性;如果其中确实有比较重要的内容或链接，那么最好换一种更传统和稳妥的方式。"),a("br"),e._v("\n千万不要耍弄你的用户，当他们一次次的浏览到页面底部，看到页脚，却因为自动加载的内容突然出现而无论如何都无法点击页脚中的链接时，他们会变的越发愤怒。"),a("br"),e._v("\nd、集中在一页当中动态加载数据，与一页一页的输出相比，究竟那种方式更利于SEO，这是你必须考虑的问题。对于某些以类型网站来说，在这方面进行冒险是很不划算的。"),a("br"),e._v("\ne、关于页面数量的印象："),a("br"),e._v("\n其实站在用户的角度来看，这一点并非负面;不过，如果对于你的网站来说，通过更多的内容页面展示更多的相关信息(包括广告)是很重要的策略，那么单页无限滚动的方式对你并不适用。")])]),a("li",[a("p",[e._v("流式布局（Fluid）"),a("br"),e._v("\n固定布局和流式布局在网页设计中最常用的两种布局方式。固定布局能呈现网页的原始设计效果，流式布局则不受窗口宽度影响，流式布局使用百分比宽度来限定布局元素，这样可以根据客户端分辨率的大小来进行合理的显示。")])]),a("li",[a("p",[e._v("响应式布局"),a("br"),e._v("\n响应式布局是Ethan Marcotte在2010年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念是为解决移动互联网浏览而诞生的。\n响应式布局可以为不同终端的用户提供更加舒适的界面和更好的用户体验，而且随着目前大屏幕移动设备的普及，用“大势所趋”来形容也不为过。随着越来越多的设计师采用这个技术，我们不仅看到很多的创新，还看到了一些成形的模式。"),a("br"),e._v("\n优点"),a("br"),e._v("\na、面对不同分辨率设备灵活性强"),a("br"),e._v("\nb、能够快捷解决多设备显示适应问题"),a("br"),e._v("\n缺点"),a("br"),e._v("\na、兼容各种设备工作量大，效率低下"),a("br"),e._v("\nb、代码累赘，会出现隐藏无用的元素，加载时间加长"),a("br"),e._v("\nc、其实这是一种折中性质的设计解决方案，多方面因素影响而达不到最佳效果"),a("br"),e._v("\nd、一定程度上改变了网站原有的布局结构，会出现用户混淆的情况")])])]),a("p",[e._v("圣杯布局已经非常完美，圣杯布局使用了相对定位，以后布局是有局限性的，而且宽度控制要改的地方也多。在淘宝UED（User Experience Design）探讨下，增加多一个div就可以不用相对布局了，只用到了浮动和负边距，这就是我们所说的双飞翼布局。 (2)、多栏布局 a、栏栅格系统：就是利用浮动实现的多栏布局，在bootstrap中用的非常多。 b、多列布局：栅格系统并没有真正实现分栏效果（如word中的分栏），CSS3为了满足这个要求增加了多列布局模块 (3)、弹性布局（Flexbox） CSS3引入了一种新的布局模式——Flexbox布局，即伸缩布局盒模型（Flexible Box），用来提供一个更加有效的方式制定、调整和分布一个容器里项目布局，即使它们的大小是未知或者动态的，这里简称为Flex。 Flexbox布局常用于设计比较复杂的页面，可以轻松的实现屏幕和浏览器窗口大小发生变化时保持元素的相对位置和大小不变，同时减少了依赖于浮动布局实现元素位置的定义以及重置元素的大小。 Flexbox布局在定义伸缩项目大小时伸缩容器会预留一些可用空间，让你可以调节伸缩项目的相对大小和位置。例如，你可以确保伸缩容器中的多余空间平均分配多个伸缩项目，当然，如果你的伸缩容器没有足够大的空间放置伸缩项目时，浏览器会根据一定的比例减少伸缩项目的大小，使其不溢出伸缩容器。 综合而言，Flexbox布局功能主要具有以下几点： a、屏幕和浏览器窗口大小发生改变也可以灵活调整布局； b、可以指定伸缩项目沿着主轴或侧轴按比例分配额外空间（伸缩容器额外空间），从而调整伸缩项目的大小； c、可以指定伸缩项目沿着主轴或侧轴将伸缩容器额外空间，分配到伸缩项目之前、之后或之间； d、可以指定如何将垂直于元素布局轴的额外空间分布到该元素的周围； e、可以控制元素在页面上的布局方向； f、可以按照不同于文档对象模型（DOM）所指定排序方式对屏幕上的元素重新排序。也就是说可以在浏览器渲染中不按照文档流先后顺序重排伸缩项目顺序。 (4)、瀑布流布局 瀑布流布局是流式布局的一种。是当下比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。 优点 a、有效的降低了界面复杂度，节省了空间：我们不再需要臃肿复杂的页码导航链接或按钮了。 b、对触屏设备来说，交互方式更符合直觉：在移动应用的交互环境当中，通过向上滑动进行滚屏的操作已经成为最基本的用户习惯，而且所需要的操作精准程度远远低于点击链接或按钮。 c、更高的参与度：以上两点所带来的交互便捷性可以使用户将注意力更多的集中在内容而不是操作上，从而让他们更乐于沉浸在探索与浏览当中。 缺点 a、有限的用例： 无限滚动的方式只适用于某些特定类型产品当中一部分特定类型的内容。 例如，在电商网站当中，用户时常需要在商品列表与详情页面之间切换，这种情况下，传统的、带有页码导航的方式可以帮助用户更稳妥和准确的回到某个特定的列表页面当中。 b、额外的复杂度： 那些用来打造无限滚动的JS库虽然都自称很容易使用，但你总会需要在自己的产品中进行不同程度的定制化处理，以满足你们自己的需求;另外这些JS库在浏览器和设备兼容性等方面的表现也参差不齐，你必须做好充分的测试与调整工作。 c、再见了，页脚： 如果使用了比较典型的无限滚动加载模式，这就意味着你可以和页脚说拜拜了。 最好考虑一下页脚对于你的网站，特别是用户的重要性;如果其中确实有比较重要的内容或链接，那么最好换一种更传统和稳妥的方式。 千万不要耍弄你的用户，当他们一次次的浏览到页面底部，看到页脚，却因为自动加载的内容突然出现而无论如何都无法点击页脚中的链接时，他们会变的越发愤怒。 d、集中在一页当中动态加载数据，与一页一页的输出相比，究竟那种方式更利于SEO，这是你必须考虑的问题。对于某些以类型网站来说，在这方面进行冒险是很不划算的。 e、关于页面数量的印象： 其实站在用户的角度来看，这一点并非负面;不过，如果对于你的网站来说，通过更多的内容页面展示更多的相关信息(包括广告)是很重要的策略，那么单页无限滚动的方式对你并不适用。 (5)、流式布局（Fluid） 固定布局和流式布局在网页设计中最常用的两种布局方式。固定布局能呈现网页的原始设计效果，流式布局则不受窗口宽度影响，流式布局使用百分比宽度来限定布局元素，这样可以根据客户端分辨率的大小来进行合理的显示。 (6)、响应式布局 响应式布局是Ethan Marcotte在2010年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念是为解决移动互联网浏览而诞生的。 响应式布局可以为不同终端的用户提供更加舒适的界面和更好的用户体验，而且随着目前大屏幕移动设备的普及，用“大势所趋”来形容也不为过。随着越来越多的设计师采用这个技术，我们不仅看到很多的创新，还看到了一些成形的模式。 优点 a、面对不同分辨率设备灵活性强 b、能够快捷解决多设备显示适应问题 缺点 a、兼容各种设备工作量大，效率低下 b、代码累赘，会出现隐藏无用的元素，加载时间加长 c、其实这是一种折中性质的设计解决方案，多方面因素影响而达不到最佳效果 d、一定程度上改变了网站原有的布局结构，会出现用户混淆的情况")]),a("h3",{attrs:{id:"_61-canvas和svg的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_61-canvas和svg的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 61.Canvas和SVG的区别")]),a("ul",[a("li",[e._v("SVG是一种使用XML来描述2D图形的"),a("strong",[e._v("语言")]),e._v("，Canvas通过JS来绘制2D图形。")]),a("li",[e._v("SVG绘制的是矢量图，矢量图的特点是不随图形的放大缩小改变清晰度，不会出现锯齿形，而Canvas是逐像素渲染的，放大后可能出现锯齿形。")]),a("li",[e._v("SVG的每个图形都被视为对象，如果对象的属性变化，那么浏览器能够自动重现图形。Canvas一旦图形绘制完成，就不会受到关注。如果其位置发生变化，那么整个场景也需要重新绘制。")]),a("li",[e._v("Canvas能够以.png和.jpg格式保存结果图像。")]),a("li",[e._v("Canvas适合图像密集型的游戏，其中很多对象会被频繁重绘，SVG适合带有大型渲染区域的应用程序（比如谷歌地图）。")])]),a("h2",{attrs:{id:"第三部分：http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三部分：http协议","aria-hidden":"true"}},[e._v("#")]),e._v(" 第三部分：HTTP协议")]),a("h3",{attrs:{id:"_1-cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-cache-control","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.cache-control")]),a("p",[e._v("网页的缓存是由HTTP消息头中的“Cache-control”来控制的，常见的取值有private、no-cache、max-age、must-revalidate等，默认为private。")]),a("p",[e._v("Expires 头部字段提供一个日期和时间，响应在该日期和时间后被认为失效。允许客户端在这个时间之前不去检查（发请求），等同max-age的效果。但是如果同时存在，则被Cache-Control的max-age覆盖。")]),a("p",[e._v('Expires = "Expires" ":" HTTP-date'),a("br"),e._v("\n例如："),a("br"),e._v("\nExpires: Thu, 01 Dec 1994 16:00:00 GMT （必须是GMT格式）"),a("br"),e._v("\n如果把它设置为-1，则表示立即过期")]),a("p",[e._v("Expires 和 max-age 都可以用来指定文档的过期时间，但是二者有一些细微差别")]),a("ol",[a("li",[e._v("Expires在HTTP/1.0中已经定义，Cache-Control:max-age在HTTP/1.1中才有定义，为了向下兼容，仅使用max-age不够")]),a("li",[e._v("Expires指定一个绝对的过期时间(GMT格式),这么做会导致至少2个问题："),a("br"),e._v("\n2.1 客户端和服务器时间不同步导致Expires的配置出现问题。"),a("br"),e._v("\n2.2 很容易在配置后忘记具体的过期时间，导致过期来临出现浪涌现象")]),a("li",[e._v("max-age 指定的是从文档被访问后的存活时间，这个时间是个相对值(比如:3600s)，相对的是文档第一次被请求时服务器记录的Request_time(请求时间)")]),a("li",[e._v("Expires 指定的时间可以是相对文件的最后访问时间(Atime)或者修改时间(MTime)，而max-age相对对的是文档的请求时间(Atime)")]),a("li",[e._v("如果值为 no-cache,那么每次都会访问服务器。如果值为max-age，则在过期之前不会重复访问服务器。")])]),a("h3",{attrs:{id:"_2-常见的http状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见的http状态码","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.常见的HTTP状态码")]),a("blockquote",[a("p",[e._v("2XX:表示成功请求"),a("br"),e._v("\n3XX:需要重定向，浏览器直接跳转"),a("br"),e._v("\n4XX:客户端请求错误，如404"),a("br"),e._v("\n5XX:服务器端错误")])]),a("ul",[a("li",[a("strong",[e._v("100 Continue")]),e._v(" 继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息")]),a("li",[a("strong",[e._v("200 OK")]),e._v(" 正常返回信息")]),a("li",[a("strong",[e._v("201 Created")]),e._v(" 请求成功并且服务器创建了新的资源")]),a("li",[a("strong",[e._v("202 Accepted")]),e._v(" 服务器已接受请求，但尚未处理")]),a("li",[a("strong",[e._v("301 Moved Permanently")]),e._v(" 请求的网页已永久移动到新位置。")]),a("li",[a("strong",[e._v("302 Found")]),e._v(" 临时性重定向。")]),a("li",[a("strong",[e._v("303 See Other")]),e._v(" 临时性重定向，且总是使用 GET 请求新的 URI。")]),a("li",[a("strong",[e._v("304 Not Modified")]),e._v(" 自从上次请求后，请求的网页未修改过。")]),a("li",[a("strong",[e._v("400 Bad Request")]),e._v(" 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。")]),a("li",[a("strong",[e._v("401 Unauthorized")]),e._v(" 请求未授权。")]),a("li",[a("strong",[e._v("403 Forbidden")]),e._v(" 禁止访问。")]),a("li",[a("strong",[e._v("404 Not Found")]),e._v(" 找不到如何与 URI 相匹配的资源。")]),a("li",[a("strong",[e._v("500 Internal Server Error")]),e._v(" 最常见的服务器端错误。")]),a("li",[a("strong",[e._v("503 Service Unavailable")]),e._v(" 服务器端暂时无法处理请求（可能是过载或维护）。")])]),a("h3",{attrs:{id:"_3-http状态码有那些？分别代表是什么意思？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http状态码有那些？分别代表是什么意思？","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.http状态码有那些？分别代表是什么意思？")]),a("ol",[a("li",[a("p",[e._v("100-199 用于指定客户端应响应的某些动作")])]),a("li",[a("p",[e._v("200-299 用于表示请求成功")])]),a("li",[a("p",[e._v("300-399 用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息")])]),a("li",[a("p",[e._v("400-499 用于指出客户端的错误")]),a("p",[e._v("400：语义有误，当前请求无法被服务器理解"),a("br"),e._v("\n401：当前请求需要用户验证"),a("br"),e._v("\n403：服务器已经理解请求，但是拒绝执行它")])]),a("li",[a("p",[e._v("500-599 用于指出服务器错误")]),a("p",[e._v("503：服务不可用")])])]),a("h3",{attrs:{id:"_4-为什么https比http安全？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么https比http安全？","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.为什么HTTPS比HTTP安全？")]),a("p",[e._v("HTTP协议通常承载于TCP协议之上，在HTTP和TCP之间添加一个安全协议层（SSL或TSL），这个时候，就成了我们常说的HTTPS。")]),a("p",[e._v("因为网络请求需要中间有很多的服务器路由器的转发。中间的节点都可能篡改信息，而如果使用HTTPS，密钥在你和终点站才有。https之所以比http安全，是因为他利用ssl/tls协议传输。它包含证书，卸载，流量转发，负载均衡，页面适配，浏览器适配，refer传递等。保障了传输过程的安全性。")]),a("h3",{attrs:{id:"_5-get和post的区别，何时使用post？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-get和post的区别，何时使用post？","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.GET和POST的区别，何时使用POST？")]),a("ul",[a("li",[e._v("GET：一般用于信息获取，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符")]),a("li",[e._v("POST：一般用于修改服务器上的资源，对所发送的信息没有限制。")]),a("li",[e._v("GET方式需要使用Request.QueryString来取得变量的值，而POST方式通过Request.Form来获取变量的值，\n"),a("ul",[a("li",[e._v("也就是说Get是通过地址栏来传值，而Post是通过提交表单来传值。")]),a("li",[e._v("然而，在以下情况中，请使用 POST 请求：")]),a("li",[e._v("无法使用缓存文件（更新服务器上的文件或数据库）")]),a("li",[e._v("向服务器发送大量数据（POST 没有数据量限制）   可靠")])])])]),a("h3",{attrs:{id:"_6-http无状态协议指的是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-http无状态协议指的是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 6. HTTP无状态协议指的是什么？")]),a("p",[e._v("HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。")]),a("h2",{attrs:{id:"第四部分：其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四部分：其他","aria-hidden":"true"}},[e._v("#")]),e._v(" 第四部分：其他")]),a("h3",{attrs:{id:"_1-谈谈你对模块化开发的理解？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-谈谈你对模块化开发的理解？","aria-hidden":"true"}},[e._v("#")]),e._v(" 1.谈谈你对模块化开发的理解？")]),a("p",[e._v("所谓的模块化开发就是封装细节，提供使用接口，彼此之间互不影响，每个模块都是实现某一特定的功能。模块化开发的基础就是函数。")]),a("h3",{attrs:{id:"_2-什么是响应式开发？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是响应式开发？","aria-hidden":"true"}},[e._v("#")]),e._v(" 2.什么是响应式开发？")]),a("ul",[a("li",[a("p",[e._v("概念：顾名思义，同一个网站兼容不同的大小的设备。如PC端、移动端（平板、横屏、竖排）的显示风格。")])]),a("li",[a("p",[e._v("需要用到的技术：")]),a("ul",[a("li",[e._v("Media Query（媒体查询）")]),a("li",[e._v("使用em或rem做尺寸单位")]),a("li",[e._v("禁止页面缩放")]),a("li",[e._v("屏幕尺寸响应")])]),a("p",[e._v("来源：http://blog.csdn.net/lxcao/article/details/52853093")])])]),a("h3",{attrs:{id:"_3-说说最近最流行的一些东西吧？常去的哪些网站？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-说说最近最流行的一些东西吧？常去的哪些网站？","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.说说最近最流行的一些东西吧？常去的哪些网站？")]),a("p",[e._v("最流行的一些东西：")]),a("ol",[a("li",[e._v("Node.js")]),a("li",[e._v("Mongodb")]),a("li",[e._v("npm")]),a("li",[e._v("MVVM")]),a("li",[e._v("MEAN")]),a("li",[e._v("three.js")]),a("li",[e._v("React")])]),a("p",[e._v("常去的网站：")]),a("ol",[a("li",[e._v("牛客网")]),a("li",[e._v("Github")]),a("li",[e._v("CSDN")])]),a("h3",{attrs:{id:"_4-页面渲染原理是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-页面渲染原理是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 4.页面渲染原理是什么？")]),a("ol",[a("li",[e._v("渲染引擎开始解析html，根据标签构建DOM节点")]),a("li",[e._v("根据css样式构建渲染树，包括元素的大小、颜色，隐藏的元素不会被构建到该树中。")]),a("li",[e._v("根据css样式构建布局树，主要是确定元素要显示的位置。")]),a("li",[e._v("根据前面的信息，绘制渲染树。")])]),a("h3",{attrs:{id:"_5-浏览器的内核分别是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-浏览器的内核分别是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 5.浏览器的内核分别是什么？")]),a("p",[e._v("IE浏览器的内核Trident、Mozilla的Gecko、Chrome的Blink（WebKit的分支）、Opera内核原为Presto，现为Blink；")]),a("h3",{attrs:{id:"_6-从浏览器地址栏输入url到显示页面的步骤-以http为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-从浏览器地址栏输入url到显示页面的步骤-以http为例","aria-hidden":"true"}},[e._v("#")]),e._v(" 6.从浏览器地址栏输入url到显示页面的步骤(以HTTP为例)")]),a("ol",[a("li",[e._v("查找浏览器缓存")]),a("li",[e._v("DNS解析、查找该域名对应的IP地址、重定向（301）、发出第二个GET请求")]),a("li",[e._v("进行HTTP协议会话")]),a("li",[e._v("客户端发送报头(请求报头)")]),a("li",[e._v("服务器回馈报头(响应报头)")]),a("li",[e._v("html文档开始下载")]),a("li",[e._v("文档树建立，根据标记请求所需指定MIME类型的文件")]),a("li",[e._v("文件显示")])]),a("p",[e._v("浏览器这边做的工作大致分为以下几步：")]),a("ul",[a("li",[e._v("加载：根据请求的URL进行域名解析，向服务器发起请求，接收文件（HTML、JS、CSS、图象等）。")]),a("li",[e._v("解析：对加载到的资源（HTML、JS、CSS等）进行语法解析，建议相应的内部数据结构（比如HTML的DOM树，JS的（对象）属性表，CSS的样式规则等等）")])]),a("h3",{attrs:{id:"_7-平时如何管理你的项目？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-平时如何管理你的项目？","aria-hidden":"true"}},[e._v("#")]),e._v(" 7.平时如何管理你的项目？")]),a("ol",[a("li",[e._v("先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等")]),a("li",[e._v("编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）")]),a("li",[e._v("标注样式编写人，各模块都及时标注（标注关键样式调用的地方）")]),a("li",[e._v("页面进行标注（例如 页面 模块 开始和结束）")]),a("li",[e._v("CSS 跟 HTML 分文件夹并行存放，命名都得统一（例如 style.css）")]),a("li",[e._v("JS 分文件夹存放 命名以该 JS 功能为准的英文翻译")]),a("li",[e._v("图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理")])]),a("h3",{attrs:{id:"_8-对前端工程师这个职位是怎么样理解的？它的前景会怎么样？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-对前端工程师这个职位是怎么样理解的？它的前景会怎么样？","aria-hidden":"true"}},[e._v("#")]),e._v(" 8.对前端工程师这个职位是怎么样理解的？它的前景会怎么样？")]),a("p",[e._v("前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。")]),a("ol",[a("li",[e._v("实现界面交互")]),a("li",[e._v("提升用户体验")]),a("li",[e._v("有了Node.js，前端可以实现服务端的一些事情")])]),a("p",[e._v("前景：")]),a("ol",[a("li",[e._v("前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好")]),a("li",[e._v("参与项目，快速高质量完成实现效果图，精确到1px；")]),a("li",[e._v("与团队成员，UI设计，产品经理的沟通；")]),a("li",[e._v("做好的页面结构，页面重构和用户体验；")]),a("li",[e._v("处理hack，兼容、写出优美的代码格式；")]),a("li",[e._v("针对服务器的优化、拥抱最新前端技术。")])]),a("h3",{attrs:{id:"_9-一个页面从输入-url-到页面加载显示完成，这个过程中都发生了什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-一个页面从输入-url-到页面加载显示完成，这个过程中都发生了什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 9.一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？")]),a("p",[e._v("分为4个步骤：")]),a("ol",[a("li",[e._v("当发送一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个请求，同时在远程 DNS 服务器上启动一个 DNS 查询。这能使浏览器获得请求对应的 IP 地址。")]),a("li",[e._v("浏览器与远程 Web 服务器通过 TCP 三次握手协商来建立一个 TCP/IP 连接。该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由客户端发出该请求已经被接受的报文。")]),a("li",[e._v("一旦 TCP/IP 连接建立，浏览器会通过该连接向远程服务器发送 HTTP 的 GET 请求。远程服务器找到资源并使用 HTTP 响应返回该资源，值为 200 的 HTTP 响应状态表示一个正确的响应。")]),a("li",[e._v("此时，Web 服务器提供资源服务，客户端开始下载资源。")])]),a("p",[e._v("请求返回后，便进入了我们关注的前端模块\n简单来说，浏览器会解析 HTML 生成 DOM Tree，其次会根据 CSS 生成 CSS Rule Tree，而 javascript 又可以根据 DOM API 操作 DOM")]),a("h3",{attrs:{id:"_10-bootstrap原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-bootstrap原理","aria-hidden":"true"}},[e._v("#")]),e._v(" 10.bootstrap原理")]),a("p",[e._v("流式栅格系统和媒体查询的结合。"),a("br"),e._v("\n网格系统的实现原理非常简单，仅仅是通过定义容器大小，平分12份(也有平分成24份或32份，但12份是最常见的)，再调整内外边距，最后结合媒体查询，就制作出了强大的响应式网格系统。Bootstrap框架中的网格系统就是将容器平分成12份。")]),a("ul",[a("li",[e._v("数据行(.row)必须包含在容器（.container）中，以便为其赋予合适的对齐方式和内距(padding)。")]),a("li",[e._v("在行(.row)中可以添加列(.column)，但列数之和不能超过平分的总列数，比如12。")]),a("li",[e._v("具体内容应当放置在列容器（column）之内，而且只有列（column）才可以作为行容器(.row)的直接子元素。")])]),a("p",[e._v("兼容性：基本上是IE8+以上，\n解决IE7-IE8支持度差的问题：用注释的方法引入bootstrap插件")]),a("ul",[a("li",[e._v("respond.js：Respond.js 是一个快速、轻量的 polyfill,用于为 IE6-8 以及其它不支持 CSS3 Media Queries 的浏览器提供媒体查询的 min-width 和 max-width 特性。")]),a("li",[e._v("html5:让IE(包括IE6)支持HTML5元素")]),a("li",[e._v("css3-mediaqueries.js:解决低版本IE不兼容CSS3的问题。")])]),a("h3",{attrs:{id:"_11-使用css预处理器吗？喜欢哪个？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-使用css预处理器吗？喜欢哪个？","aria-hidden":"true"}},[e._v("#")]),e._v(" 11.使用CSS预处理器吗？喜欢哪个？")]),a("p",[e._v("SASS")]),a("h3",{attrs:{id:"_12-amd和cmd的规范区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-amd和cmd的规范区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 12.AMD和CMD的规范区别？")]),a("ol",[a("li",[a("p",[e._v("对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.2. CMD 推崇依赖就近，AMD 推崇依赖前置。"),a("br"),e._v("\n看代码：")]),a("pre",[a("code",[e._v(" // CMD   \n define(function(require, exports, module){   \n \t \tvar a = require('./a')  \n \t \ta.doSomething()   \n \t \t// 此处略去 100 行   \n      \tvar b = require('./b') // 依赖可以就近书写  \n \t \tb.doSomething()   \n \t \t// ... \n })\n \n // AMD 默认推荐的是\n define(['./a', './b'], function(a, b) {  // 依赖必须一开始就写好    \t\n \t\ta.doSomething()    // 此处略去 100 行    \n \t \tb.doSomething()    \n \t \t...\n })      \n")])])])]),a("p",[e._v("虽然 AMD 也支持 CMD 的写法，同时还支持将 require 作为依赖项传递，但 RequireJS 的作者默认是最喜欢上面的写法，也是官方文档里默认的模块定义写法。3. AMD 的 API 默认是一个当多个用，CMD 的 API 严格区分，推崇职责单一。比如 AMD 里，require 分全局 require 和局部 require，都叫 require。CMD 里，没有全局 require，而是根据模块系统的完备性，提供 seajs.use 来实现模块系统的加载启动。CMD 里，每个 API 都简单纯粹。")]),a("h3",{attrs:{id:"_13-jquery的源码看过吗？能不能简单说一下它的实现原理？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-jquery的源码看过吗？能不能简单说一下它的实现原理？","aria-hidden":"true"}},[e._v("#")]),e._v(" 13.JQuery的源码看过吗？能不能简单说一下它的实现原理？")]),a("p",[e._v("选择器，链式调用。")]),a("h3",{attrs:{id:"_14-jquery和jquery-ui有啥区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-jquery和jquery-ui有啥区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 14.jQuery和jQuery UI有啥区别？")]),a("ul",[a("li",[e._v("jQuery是一个js库，主要提供的功能是选择器，属性修改和事件绑定等等。")]),a("li",[e._v("jQuery UI则是在jQuery的基础上，利用jQuery的扩展性，设计的插件。提供了一些常用的界面元素，诸如对话框、拖动行为、改变大小行为等等。")])]),a("h3",{attrs:{id:"_15-node-js的优点和缺点？适用场景？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-node-js的优点和缺点？适用场景？","aria-hidden":"true"}},[e._v("#")]),e._v(" 15.node.js的优点和缺点？适用场景？")]),a("p",[e._v("优点：")]),a("ol",[a("li",[e._v("因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。")]),a("li",[e._v("与Node代理服务器交互的客户端代码是由javascript语言编写的，因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。")])]),a("p",[e._v("缺点：")]),a("ol",[a("li",[e._v("Node是一个相对新的开源项目，所以不太稳定，它总是一直在变。")]),a("li",[e._v("缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子（第三方库现在已经很丰富了，所以这个缺点可以说不存在了）。")])]),a("p",[e._v("适用场景:")]),a("ol",[a("li",[e._v("高并发")]),a("li",[e._v("聊天")]),a("li",[e._v("实时消息推送")])]),a("h3",{attrs:{id:"_16-你了解到的web攻击技术？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-你了解到的web攻击技术？","aria-hidden":"true"}},[e._v("#")]),e._v(" 16.你了解到的WEB攻击技术？")]),a("ol",[a("li",[e._v("利用Web服务器的漏洞进行攻击，如CGI缓冲区溢出，目录遍历漏洞利用等攻击；")]),a("li",[e._v("利用网页自身的安全漏洞进行攻击，如SQL注入，跨站脚本攻击等")])]),a("h3",{attrs:{id:"_17-web前端密码加密是否有意义？-既然前端代码都是直接可以看到的，那加密是否还有意义？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-web前端密码加密是否有意义？-既然前端代码都是直接可以看到的，那加密是否还有意义？","aria-hidden":"true"}},[e._v("#")]),e._v(" 17.Web前端密码加密是否有意义？(既然前端代码都是直接可以看到的，那加密是否还有意义？)")]),a("p",[e._v("加密有意义。在 HTTP 协议下，数据是明文传输，并且在非加密的传输过程中，黑客可更改数据或插入恶意的代码等。在数据发送前将数据进行哈希或使用公钥加密后，如果数据被人获取，拿到的则不再是明文。")]),a("h3",{attrs:{id:"_18-谈谈对前端模块化开发的认识？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-谈谈对前端模块化开发的认识？","aria-hidden":"true"}},[e._v("#")]),e._v(" 18.谈谈对前端模块化开发的认识？")]),a("blockquote",[a("p",[e._v("AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。\nCMD 是 SeaJS 在推广过程中对模块定义的规范化产出。\nAMD 是提前执行，CMD 是延迟执行。")])]),a("p",[e._v("AMD推荐的风格通过返回一个对象做为模块对象，CommonJS的风格通过对module.exports或exports的属性赋值来达到暴露模块对象的目的。")]),a("p",[e._v("CMD模块方式")]),a("pre",[a("code",[e._v("define(function(require, exports, module) {\n  // 模块代码\n});\n")])]),a("h3",{attrs:{id:"_19-99-的网站都需要被重构是那本书上写的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-99-的网站都需要被重构是那本书上写的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 19. 99%的网站都需要被重构是那本书上写的？")]),a("p",[e._v("《网站重构：应用Web标准进行设计（第2版）》 泽尔德曼著")]),a("h3",{attrs:{id:"_20-线程与进程的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-线程与进程的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 20.线程与进程的区别")]),a("ul",[a("li",[e._v("一个程序至少有一个进程,一个进程至少有一个线程.")]),a("li",[e._v("线程的划分尺度小于进程，使得多线程程序的并发性高。")]),a("li",[e._v("另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。")]),a("li",[e._v("线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。")]),a("li",[e._v("从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。")])]),a("h3",{attrs:{id:"_21-你怎么看待web-app-、hybrid-app、native-app？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-你怎么看待web-app-、hybrid-app、native-app？","aria-hidden":"true"}},[e._v("#")]),e._v(" 21.你怎么看待Web App 、hybrid App、Native App？")]),a("p",[a("strong",[e._v("Web App")]),a("br"),e._v("\n指采用Html5语言写出的App，不需要下载安装。类似于现在所说的轻应用。生存在浏览器中的应用，基本上可以说是触屏版的网页应用。比如学者网的手机web。")]),a("p",[e._v("1.优点:")]),a("ul",[a("li",[e._v("开发成本低，")]),a("li",[e._v("更新快，")]),a("li",[e._v("更新无需通知用户，不需要手动升级,")]),a("li",[e._v("能够跨多个平台和终端。")])]),a("p",[e._v("2.缺点")]),a("ul",[a("li",[e._v("临时性的入口")]),a("li",[e._v("无法获取系统级别的通知，提醒，动效等等")]),a("li",[e._v("用户留存率低")]),a("li",[e._v("设计受限制诸多")]),a("li",[e._v("体验较差")])]),a("p",[a("strong",[e._v("Hybrid App")])]),a("ul",[a("li",[e._v("Hybrid APP指的是半原生半Web的混合类App。需要下载安装，看上去类似Native App，但只有很少的UI Web View，访问的内容是 Web 。")]),a("li",[e._v("例如Store里的新闻类APP，视频类APP普遍采取的是Native的框架，Web的内容。")]),a("li",[e._v("Hybrid App 极力去打造类似于Native App 的体验，但仍受限于技术，网速，等等很多因素。尚不完美。")])]),a("p",[a("strong",[e._v("Native APP")]),a("br"),e._v("\n指的是原生程序，一般依托于操作系统，有很强的交互，是一个完整的App，可拓展性强。需要用户下载安装使用。")]),a("p",[e._v("1.优点：")]),a("ul",[a("li",[e._v("打造完美的用户体验")]),a("li",[e._v("性能稳定")]),a("li",[e._v("操作速度快，上手流畅")]),a("li",[e._v("访问本地资源（通讯录，相册）")]),a("li",[e._v("设计出色的动效，转场")]),a("li",[e._v("拥有系统级别的贴心通知或提醒")]),a("li",[e._v("用户留存率高")])]),a("p",[e._v("2.缺点：")]),a("ul",[a("li",[e._v("分发成本高（不同平台有不同的开发语言和界面适配）")]),a("li",[e._v("维护成本高（例如一款App已更新至V5版本，但仍有用户在使用V2， V3， V4版本，需要更多的开发人员维护之前的版本）")]),a("li",[e._v("更新缓慢，根据不同平台，提交–审核–上线 等等不同的流程，需要经过的流程较复杂")])]),a("h3",{attrs:{id:"_22-如何管理前端团队"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-如何管理前端团队","aria-hidden":"true"}},[e._v("#")]),e._v(" 22.如何管理前端团队?")]),a("p",[e._v("先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；")]),a("ol",[a("li",[e._v("编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；")]),a("li",[e._v("标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；")]),a("li",[e._v("页面进行标注（例如 页面 模块 开始和结束）；")]),a("li",[e._v("CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；")]),a("li",[e._v("JS 分文件夹存放 命名以该JS功能为准的英文翻译。\n图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理")])]),a("p",[e._v("我们可以通过cookie和session来管理http的状态。")]),a("h3",{attrs:{id:"_23-sass是什么？它有哪些好处和坏处？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-sass是什么？它有哪些好处和坏处？","aria-hidden":"true"}},[e._v("#")]),e._v(" 23.sass是什么？它有哪些好处和坏处？")]),a("p",[e._v("好处：变量、mixin、函数、规则嵌套、颜色处理等，"),a("br"),e._v("\n坏处：css的文件体积和复杂度不可控、调试难度增加、成本等。")]),a("h3",{attrs:{id:"_24-mvc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-mvc","aria-hidden":"true"}},[e._v("#")]),e._v(" 24.MVC")]),a("p",[e._v("MVC模式（Model–view–controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。")]),a("p",[e._v("MVC模式的目的是实现一种动态的程式设计，使后续对程序的修改和扩展简化，并且使程序某一部分的重复利用成为可能。除此之外，此模式通过对复杂度的简化，使程序结构更加直观。软件系统通过对自身基本部分分离的同时也赋予了各个基本部分应有的功能。专业人员可以通过自身的专长分组：")]),a("ul",[a("li",[e._v("控制器（Controller）- 负责转发请求，对请求进行处理。")]),a("li",[e._v("视图（View） - 界面设计人员进行图形界面设计。")]),a("li",[e._v("模型（Model） - 程序员编写程序应有的功能（实现算法等等）、数据库专家进行数据管理和数据库设计(可以实现具体的功能)。")])]),a("h3",{attrs:{id:"_24-git常见命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-git常见命令","aria-hidden":"true"}},[e._v("#")]),e._v(" 24.git常见命令")]),a("p",[e._v("阮一峰老师的博客是见过的最通俗易懂的git教程。"),a("br"),e._v("\n附上："),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("常见命令清单——阮一峰")])])])}],!1,null,null,null);t.default=r.exports}}]);